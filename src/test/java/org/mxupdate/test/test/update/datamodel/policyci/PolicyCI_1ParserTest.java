/*
 *  This file is part of MxUpdate <http://www.mxupdate.org>.
 *
 *  MxUpdate is a deployment tool for a PLM platform to handle
 *  administration objects as single update files (configuration item).
 *
 *  Copyright (C) 2008-2016 The MxUpdate Team - All Rights Reserved
 *
 *  You may use, distribute and modify MxUpdate under the terms of the
 *  MxUpdate license. You should have received a copy of the MxUpdate
 *  license with this file. If not, please write to <info@mxupdate.org>,
 *  or visit <www.mxupdate.org>.
 *
 */

package org.mxupdate.test.test.update.datamodel.policyci;

import org.mxupdate.test.test.update.AbstractParserTest;
import org.mxupdate.update.datamodel.Policy_mxJPO;
import org.mxupdate.update.util.ParameterCache_mxJPO;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

/**
 * Tests the {@link Policy_mxJPO policy CI} parser.
 *
 * @author The MxUpdate Team
 */
@Test
public class PolicyCI_1ParserTest
    extends AbstractParserTest<Policy_mxJPO>
{
    @Override
    @DataProvider(name = "data")
    public Object[][] getData()
    {
        final String simple = "description \"\" hidden defaultformat \"\" sequence \"\" store \"\" ";
        final String state  = "!enforcereserveaccess !majorrevision !minorrevision !version !promote !checkouthistory !published ";

        return new Object[][] {
                {"0) simple policy",
                        "",
                        simple},
                // uuid
                {"1a) uuid with minus separator",
                        "",
                        "uuid \"FDA75674-9792-11E6-AE22-56B6B6499611\" " + simple},
                {"1b) uuid w/o minus separator",
                        "",
                        "uuid \"FDA75674979211E6AE2256B6B6499611\"     " + simple},
                {"1c) uuid convert from single to string",
                        "uuid \"FDA7-5674979211-E6AE2256B6-B6499611\"  " + simple,
                        "uuid   FDA7-5674979211-E6AE2256B6-B6499611    " + simple},
                // registered name
                {"2a) symbolic name",
                        "",
                        "symbolicname \"policy_abc\" " + simple},
                {"2b) two symbolic names",
                        "symbolicname \"policy_abc\" symbolicname \"policy_def\" " + simple,
                        "symbolicname \"policy_def\" symbolicname \"policy_abc\" " + simple},
                // description
                {"3a) description",
                        "",
                        "description \"abc def\" !hidden defaultformat \"\" sequence \"\" store \"\""},
                {"3b) description not defined",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "                 !hidden defaultformat \"\" sequence \"\" store \"\""},
                {"3c) multi-line description",
                        "",
                        "description \"abc\ndef\" !hidden defaultformat \"\" sequence \"\" store \"\""},
                {"3d) tab's in description",
                        "",
                        "description \"abc\tdef\" !hidden defaultformat \"\" sequence \"\" store \"\""},
                // hidden flag
                {"4a) simple not hidden policy",
                        "",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\""},
                {"4b) not hidden policy defined as value w/o apostrophe",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" hidden false defaultformat \"\" sequence \"\" store \"\""},
                {"4c) not hidden policy defined as value with apostrophe",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" hidden \"FAlse\" defaultformat \"\" sequence \"\" store \"\""},
                {"4d) hidden policy",
                        "",
                        "description \"\" hidden defaultformat \"\" sequence \"\" store \"\""},
                {"4e) hidden hidden defined as value w/o apostrophe",
                        "description \"\" hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" hidden TRUE defaultformat \"\" sequence \"\" store \"\""},
                {"4f) hidden policy defined as value with apostrophe",
                        "description \"\" hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" hidden \"True\" defaultformat \"\" sequence \"\" store \"\""},
                // policy type
                {"5a) policy with one type",
                        "",
                        "description \"\" !hidden type \"abc\" defaultformat \"\" sequence \"\" store \"\""},
                {"5b) policy with all types",
                        "",
                        "description \"\" !hidden type all defaultformat \"\" sequence \"\" store \"\""},
                {"5c) policy with multiple types to test sorting",
                        "description \"\" !hidden type \"abc\" type \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden type \"def\" type \"abc\" defaultformat \"\" sequence \"\" store \"\""},
                {"5d) policy with one type in old syntax",
                        "description \"\" !hidden type \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden type {\"def\"} defaultformat \"\" sequence \"\" store \"\""},
                {"5d) policy with types in old syntax",
                        "description \"\" !hidden type \"abc\" type \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden type {\"def\" \"abc\"} defaultformat \"\" sequence \"\" store \"\""},
                // policy format
                {"6a) policy with one format",
                        "",
                        "description \"\" !hidden format \"abc\" defaultformat \"\" sequence \"\" store \"\""},
                {"6b) policy with all formats",
                        "",
                        "description \"\" !hidden format all defaultformat \"\" sequence \"\" store \"\""},
                {"6c) policy with multiple formats to test sorting",
                        "description \"\" !hidden format \"abc\" format \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden format \"def\" format \"abc\" defaultformat \"\" sequence \"\" store \"\""},
                {"6d) policy with one format in old syntax",
                        "description \"\" !hidden format \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden format {\"def\"} defaultformat \"\" sequence \"\" store \"\""},
                {"6d) policy with formats in old syntax",
                        "description \"\" !hidden format \"abc\" format \"def\" defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden format {\"def\" \"abc\"} defaultformat \"\" sequence \"\" store \"\""},
                // enforce flag
                {"7a) not enforce policy",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden defaultformat \"\" !enforce sequence \"\" store \"\""},
                {"7b) not enforce policy defined as value w/o apostrophe",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden defaultformat \"\" enforce false sequence \"\" store \"\""},
                {"7c) not enforce policy defined as value with apostrophe",
                        "description \"\" !hidden defaultformat \"\" sequence \"\" store \"\"",
                        "description \"\" !hidden defaultformat \"\" enforce \"FAlse\" sequence \"\" store \"\""},
                {"7d) enforce policy",
                        "",
                        "description \"\" !hidden defaultformat \"\" enforce sequence \"\" store \"\""},
                {"7e) enforce policy defined as value w/o apostrophe",
                        "description \"\" !hidden defaultformat \"\" enforce sequence \"\" store \"\"",
                        "description \"\" !hidden defaultformat \"\" enforce TRUE sequence \"\" store \"\""},
                {"7f) enforce policy defined as value with apostrophe",
                        "description \"\" !hidden defaultformat \"\" enforce sequence \"\" store \"\"",
                        "description \"\" !hidden defaultformat \"\" enforce \"True\" sequence \"\" store \"\""},
                // special characters
                {"8a) policy with description special characters",
                        "",
                        "description \"{}\\\"\" hidden defaultformat \"\" sequence \"\" store \"\""},
                {"8b) policy with type special characters",
                        "",
                        "description \"\" hidden type \"{}\\\"\" defaultformat \"\" sequence \"\" store \"\""},
                {"8c) policy with format special characters",
                        "",
                        "description \"\" hidden format \"{}\\\"\" defaultformat \"\" sequence \"\" store \"\""},
                {"8d) policy with defaultformat special characters",
                        "",
                        "description \"\" hidden defaultformat \"{}\\\"\" sequence \"\" store \"\""},
                {"8e) policy with sequence special characters",
                        "",
                        "description \"\" hidden defaultformat \"\" sequence \"{}\\\"\" store \"\""},
                {"8f) policy with store special characters",
                        "",
                        "description \"\" hidden defaultformat \"\" sequence \"\" store \"{}\\\"\""},
                {"8g) policy with delimeter / minor special characters",
                        "",
                        "description \"\" hidden defaultformat \"\" delimiter \".\" minorsequence \"{}\\\"\" majorsequence \"{}\\\"\" store \"\""},
                // policy property
                {"9a) policy with property special characters",
                        "",
                        simple + "property \"{}\\\"\""},
                {"9b) policy with property and value special characters",
                        "",
                        simple + "property \"{}\\\"\" value \"{}\\\"\""},
                {"9c) policy with property link special characters",
                        "",
                        simple + "property \"{}\\\"\" to type \"{}\\\"\""},
                {"9d) policy with property link and value special characters",
                        "",
                        simple + "property \"{}\\\"\" to type \"{}\\\"\" value \"{}\\\"\""},
                // policy state with special characters
                {"10a) policy with state symbolic name special characters",
                        "",
                        simple + "state \"{}\\\"\" { registeredname \"{}\\\"\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"10b) policy with state action",
                        "",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published action \"AAA\" input \"\" }"},
                {"10c) policy with empty state action",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published action \"\" input \"\" }"},
                {"10d) policy with state action input",
                        "",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published action \"\" input \"AAA\" }"},
                {"10e) policy with state check",
                        "",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published check \"AAA\" input \"\" }"},
                {"10f) policy with empty state check",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published check \"\" input \"\" }"},
                {"10g) policy with state check input",
                        "",
                        simple + "state \"A\" { registeredname \"A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published check \"\" input \"AAA\" }"},
                // policy registere state name
                {"11a) policy with state symbolic name",
                        "",
                        simple + "state \"A\" { registeredname \"state_A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"11b) policy with two state symbolic names",
                        "",
                        simple + "state \"A\" { registeredname \"state_A\" registeredname \"state_A1\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"11c) policy with state symbolic names defined as property",
                        simple + "state \"A\" { registeredname \"state_A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" {                            !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published } property \"state_A\" value \"A\""},
                {"11d) policy with property name equal state name (but not registered name)",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published } property \"A\" value \"A\"",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published } property \"A\" value \"A\""},
                {"11e) policy with state symbolic name in legacy syntax",
                        simple + "state \"A\" { registeredname \"state_A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { registeredName \"state_A\" !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                // policy state property
                {"20a) policy with state property special characters",
                        "",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published property \"{}\\\"\" }"},
                {"20b) policy with state property and value special characters",
                        "",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published property \"{}\\\"\" value \"{}\\\"\" }"},
                {"20c) policy with state property link special characters",
                        "",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published property \"{}\\\"\" to type \"{}\\\"\" }"},
                {"20d) policy with state property link and value special characters",
                        "",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published property \"{}\\\"\" to type \"{}\\\"\" value \"{}\\\"\" }"},
                // policy state with enforce flag
                {"21a) policy state not enforcereserveaccess",
                        "",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"21b) policy state not enforcereserveaccess defined as not",
                        simple + "state \"A\" {   !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { notenforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"21c) policy state not enforcereserveaccess defined as value w/o apostrophe",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess false majorrevision minorrevision version promote checkouthistory published }"},
                {"21d) policy state not enforcereserveaccess defined as value with apostrophe",
                        simple + "state \"A\" { !enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess \"FAlse\" majorrevision minorrevision version promote checkouthistory published }"},
                {"21e) policy state enforcereserveaccess",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"21f) policy state enforcereserveaccess defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess TRUE majorrevision minorrevision version promote checkouthistory published }"},
                {"21g) policy state enforcereserveaccess defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess \"True\" majorrevision minorrevision version promote checkouthistory published }"},
                // policy state with majorrevision flag
                {"22a) policy state not majorrevision",
                        "",
                        simple + "state \"A\" { enforcereserveaccess !majorrevision minorrevision version promote checkouthistory published }"},
                {"22b) policy state not majorrevision defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess !majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision false minorrevision version promote checkouthistory published }"},
                {"22c) policy state not majorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess !majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision \"FAlse\" minorrevision version promote checkouthistory published }"},
                {"22d) policy state majorrevision",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"22e) policy state majorrevision defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision TRUE minorrevision version promote checkouthistory published }"},
                {"22f) policy state majorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision \"True\" minorrevision version promote checkouthistory published }"},
                // policy state with minorrevision flag
                {"23a) policy state not minorrevision",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }"},
                {"23b) policy state not minorrevision defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision false version promote checkouthistory published }"},
                {"23c) policy state not minorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision \"FAlse\" version promote checkouthistory published }"},
                {"23d) policy state minorrevision",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"23e) policy state minorrevision defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision TRUE version promote checkouthistory published }"},
                {"23f) policy state minorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision \"True\" version promote checkouthistory published }"},
                // policy state with revision flag
                {"24a) policy state not revision",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !revision version promote checkouthistory published }"},
                {"24b) policy state not minorrevision defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision revision false version promote checkouthistory published }"},
                {"24c) policy state not minorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision !minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision revision \"FAlse\" version promote checkouthistory published }"},
                {"24d) policy state minorrevision",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision revision version promote checkouthistory published }"},
                {"24e) policy state minorrevision defined as value w/o apostrophe",
                       simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision revision TRUE version promote checkouthistory published }"},
                {"24f) policy state minorrevision defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision revision \"True\" version promote checkouthistory published }"},
                // policy state with version flag
                {"25a) policy state not version",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision !version promote checkouthistory published }"},
                {"25b) policy state not version defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision !version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version false promote checkouthistory published }"},
                {"25c) policy state not version defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision !version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version \"FAlse\" promote checkouthistory published }"},
                {"25d) policy state version",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"25e) policy state version defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version TRUE promote checkouthistory published }"},
                {"25f) policy state version defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version \"True\" promote checkouthistory published }"},
                // policy state with promote flag
                {"26a) policy state not promote",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version !promote checkouthistory published }"},
                {"26b) policy state not promote defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version !promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote false checkouthistory published }"},
                {"26c) policy state not promote defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version !promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote \"FAlse\" checkouthistory published }"},
                {"26d) policy state promote",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"26e) policy state promote defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote TRUE checkouthistory published }"},
                {"26f) policy state promote defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote \"True\" checkouthistory published }"},
                // policy state with checkouthistory flag
                {"27a) policy state not checkouthistory",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote !checkouthistory published }"},
                {"27b) policy state not checkouthistory defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote !checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory false published }"},
                {"27c) policy state not checkouthistory defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote !checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory \"FAlse\" published }"},
                {"27d) policy state checkouthistory",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"27e) policy state checkouthistory defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory TRUE published }"},
                {"27f) policy state checkouthistory defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory \"True\" published }"},
                // policy state with published flag
                {"28a) policy state not published",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory !published }"},
                {"28b) policy state not published defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory !published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published false }"},
                {"28c) policy state not published defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory !published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published \"FAlse\" }"},
                {"28d) policy state published",
                        "",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }"},
                {"28e) policy state published defined as value w/o apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published TRUE }"},
                {"28f) policy state published defined as value with apostrophe",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published }",
                        simple + "state \"A\" { enforcereserveaccess majorrevision minorrevision version promote checkouthistory published \"True\" }"},

                // all state owner
                {"30a) all state owner", "", simple + "allstate {              owner             {read} }"},
                {"30b) all state owner", "", simple + "allstate {        login owner             {read} }"},
                {"30c) all state owner", "", simple + "allstate { revoke       owner             {read} }"},
                {"30d) all state owner", "", simple + "allstate { revoke login owner             {read} }"},
                {"30e) all state owner", "", simple + "allstate {              owner key \"key\" {read} }"},
                {"30f) all state owner", "", simple + "allstate {        login owner key \"key\" {read} }"},
                {"30g) all state owner", "", simple + "allstate { revoke       owner key \"key\" {read} }"},
                {"30h) all state owner", "", simple + "allstate { revoke login owner key \"key\" {read} }"},
                // all state public
                {"31a) all state public", "", simple + "allstate {              public             {read} }"},
                {"31b) all state public", "", simple + "allstate {        login public             {read} }"},
                {"31c) all state public", "", simple + "allstate { revoke       public             {read} }"},
                {"31d) all state public", "", simple + "allstate { revoke login public             {read} }"},
                {"31e) all state public", "", simple + "allstate {              public key \"key\" {read} }"},
                {"31f) all state public", "", simple + "allstate {        login public key \"key\" {read} }"},
                {"31g) all state public", "", simple + "allstate { revoke       public key \"key\" {read} }"},
                {"31h) all state public", "", simple + "allstate { revoke login public key \"key\" {read} }"},
                // allstate state user
                {"32a) all state user", "", simple + "allstate {              user \"createor\"             {read} }"},
                {"32b) all state user", "", simple + "allstate {        login user \"createor\"             {read} }"},
                {"32c) all state user", "", simple + "allstate { revoke       user \"createor\"             {read} }"},
                {"32d) all state user", "", simple + "allstate { revoke login user \"createor\"             {read} }"},
                {"32e) all state user", "", simple + "allstate {              user \"createor\" key \"key\" {read} }"},
                {"32f) all state user", "", simple + "allstate {        login user \"createor\" key \"key\" {read} }"},
                {"32g) all state user", "", simple + "allstate { revoke       user \"createor\" key \"key\" {read} }"},
                {"32h) all state user", "", simple + "allstate { revoke login user \"createor\" key \"key\" {read} }"},

                // single state owner
                {"40a) single state owner", "", simple + "state \"A\" { " + state + "              owner             {read} }"},
                {"40b) single state owner", "", simple + "state \"A\" { " + state + "        login owner             {read} }"},
                {"40c) single state owner", "", simple + "state \"A\" { " + state + " revoke       owner             {read} }"},
                {"40d) single state owner", "", simple + "state \"A\" { " + state + " revoke login owner             {read} }"},
                {"40e) single state owner", "", simple + "state \"A\" { " + state + "              owner key \"key\" {read} }"},
                {"40f) single state owner", "", simple + "state \"A\" { " + state + "        login owner key \"key\" {read} }"},
                {"40g) single state owner", "", simple + "state \"A\" { " + state + " revoke       owner key \"key\" {read} }"},
                {"40h) single state owner", "", simple + "state \"A\" { " + state + " revoke login owner key \"key\" {read} }"},
                // single state public
                {"41a) single state public", "", simple + "state \"A\" { " + state + "              public             {read} }"},
                {"41b) single state public", "", simple + "state \"A\" { " + state + "        login public             {read} }"},
                {"41c) single state public", "", simple + "state \"A\" { " + state + " revoke       public             {read} }"},
                {"41d) single state public", "", simple + "state \"A\" { " + state + " revoke login public             {read} }"},
                {"41e) single state public", "", simple + "state \"A\" { " + state + "              public key \"key\" {read} }"},
                {"41f) single state public", "", simple + "state \"A\" { " + state + "        login public key \"key\" {read} }"},
                {"41g) single state public", "", simple + "state \"A\" { " + state + " revoke       public key \"key\" {read} }"},
                {"41h) single state public", "", simple + "state \"A\" { " + state + " revoke login public key \"key\" {read} }"},
                // single state user
                {"42a) single state user", "", simple + "state \"A\" { " + state + "              user \"createor\"             {read} }"},
                {"42b) single state user", "", simple + "state \"A\" { " + state + "        login user \"createor\"             {read} }"},
                {"42c) single state user", "", simple + "state \"A\" { " + state + " revoke       user \"createor\"             {read} }"},
                {"42d) single state user", "", simple + "state \"A\" { " + state + " revoke login user \"createor\"             {read} }"},
                {"42e) single state user", "", simple + "state \"A\" { " + state + "              user \"createor\" key \"key\" {read} }"},
                {"42f) single state user", "", simple + "state \"A\" { " + state + "        login user \"createor\" key \"key\" {read} }"},
                {"42g) single state user", "", simple + "state \"A\" { " + state + " revoke       user \"createor\" key \"key\" {read} }"},
                {"42h) single state user", "", simple + "state \"A\" { " + state + " revoke login user \"createor\" key \"key\" {read} }"},

                // state route
                {"50a) state with route",                "", simple + "state \"A\" { " + state + " route {\"abc\"} \"\"     }"},
                {"50b) state with route & message",      "", simple + "state \"A\" { " + state + " route {\"abc\"} \"abc\"  }"},
                {"50c) state with multiple route users (to test sorting)",
                        simple + "state \"A\" { " + state + " route {\"abc\" \"def\"} \"\" }",
                        simple + "state \"A\" { " + state + " route {\"def\" \"abc\"} \"\" }"},
                {"50d) state with empty route user",
                        simple + "state \"A\" { " + state + "               }",
                        simple + "state \"A\" { " + state + " route {} \"\" }"},

                // state trigger
                {"60a) state with check trigger",               "", simple + "state \"A\" { " + state + " trigger modify check    \"Prog\" input \"\" }"},
                {"60b) state with check trigger & input",       "", simple + "state \"A\" { " + state + " trigger modify check    \"Prog\" input \"abc\" }"},
                {"60c) state with check trigger & empty input",
                        simple + "state \"A\" { " + state + " trigger modify check    \"Prog\" input \"\" }",
                        simple + "state \"A\" { " + state + " trigger modify check    \"Prog\"            }"},
                {"61a) state with override trigger",         "", simple + "state \"A\" { " + state + " trigger modify override \"Prog\" input \"\" }"},
                {"61b) state with override trigger & input", "", simple + "state \"A\" { " + state + " trigger modify override \"Prog\" input \"abc\" }"},
                {"61c) state with check trigger & empty input",
                        simple + "state \"A\" { " + state + " trigger modify override    \"Prog\" input \"\" }",
                        simple + "state \"A\" { " + state + " trigger modify override    \"Prog\"            }"},

                {"62a) state with action trigger",           "", simple + "state \"A\" { " + state + " trigger modify action   \"Prog\" input \"\" }"},
                {"62b) state with action trigger & input",   "", simple + "state \"A\" { " + state + " trigger modify action   \"Prog\" input \"abc\" }"},
                {"62c) state with check trigger & no input",
                        simple + "state \"A\" { " + state + " trigger modify action    \"Prog\" input \"\" }",
                        simple + "state \"A\" { " + state + " trigger modify action    \"Prog\"             }"},

                // state signature (branch)
                {"70a) state with signature",         "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"\"    approve {}        ignore {}        reject {}        filter \"\"    } }"},
                {"70b) state with signature branch",  "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"abc\" approve {}        ignore {}        reject {}        filter \"\"    } }"},
                {"70c) state with signature approve", "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"\"    approve {\"abc\"} ignore {}        reject {}        filter \"\"    } }"},
                {"70d) state with signature ignore",  "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"\"    approve {}        ignore {\"abc\"} reject {}        filter \"\"    } }"},
                {"70e) state with signature reject",  "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"\"    approve {}        ignore {}        reject {\"abc\"} filter \"\"    } }"},
                {"70f) state with signature filter",  "", simple + "state \"A\" { " + state + " signature \"A\" { branch \"\"    approve {}        ignore {}        reject {}        filter \"abc\" } }"},
                {"70g) state with empty signature value (to check default values)",
                        simple + "state \"A\" { " + state + " signature \"A\" { branch \"\" approve {} ignore {} reject {} filter \"\" } }",
                        simple + "state \"A\" { " + state + " signature \"A\" { } }"},
        };
    }

    @Override
    protected Policy_mxJPO createNewData(final ParameterCache_mxJPO _paramCache,
                                         final String _name)
    {
        return new Policy_mxJPO(_name);
    }
}
