/* Generated By:JavaCC: Do not edit this line. MxParserConstants.java */
/*
 *  This file is part of MxUpdate <http://www.mxupdate.org>.
 *
 *  MxUpdate is a deployment tool for a PLM platform to handle
 *  administration objects as single update files (configuration item).
 *
 *  Copyright (C) 2008-2016 The MxUpdate Team - All Rights Reserved
 *
 *  You may use, distribute and modify MxUpdate under the terms of the
 *  MxUpdate license. You should have received a copy of the MxUpdate
 *  license with this file. If not, please write to <info@mxupdate.org>,
 *  or visit <www.mxupdate.org>.
 *
 */

package org.mxupdate.update.zparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface MxParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ABSTRACT_TRUE = 5;
  /** RegularExpression Id. */
  int ABSTRACT_FALSE = 6;
  /** RegularExpression Id. */
  int ACTIVE_TRUE = 7;
  /** RegularExpression Id. */
  int ACTIVE_FALSE = 8;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE = 9;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE = 10;
  /** RegularExpression Id. */
  int CUSTOM_TRUE = 11;
  /** RegularExpression Id. */
  int CUSTOM_FALSE = 12;
  /** RegularExpression Id. */
  int DOWNLOADABLE_TRUE = 13;
  /** RegularExpression Id. */
  int DOWNLOADABLE_FALSE = 14;
  /** RegularExpression Id. */
  int EMAIL_TRUE = 15;
  /** RegularExpression Id. */
  int EMAIL_FALSE = 16;
  /** RegularExpression Id. */
  int ENABLE_TRUE = 17;
  /** RegularExpression Id. */
  int ENABLE_FALSE = 18;
  /** RegularExpression Id. */
  int ENFORCE_TRUE = 19;
  /** RegularExpression Id. */
  int ENFORCE_FALSE = 20;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE = 21;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE = 22;
  /** RegularExpression Id. */
  int GLOBAL_TRUE = 23;
  /** RegularExpression Id. */
  int GLOBAL_FALSE = 24;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 25;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 26;
  /** RegularExpression Id. */
  int INCONMAIL_TRUE = 27;
  /** RegularExpression Id. */
  int INCONMAIL_FALSE = 28;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE = 29;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE = 30;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE = 31;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE = 32;
  /** RegularExpression Id. */
  int MULTILINE_TRUE = 33;
  /** RegularExpression Id. */
  int MULTILINE_FALSE = 34;
  /** RegularExpression Id. */
  int MULTIVALUE_TRUE = 35;
  /** RegularExpression Id. */
  int MULTIVALUE_FALSE = 36;
  /** RegularExpression Id. */
  int NEEDSBUSINESSOBJECT_TRUE = 37;
  /** RegularExpression Id. */
  int NEEDSBUSINESSOBJECT_FALSE = 38;
  /** RegularExpression Id. */
  int PIPE_TRUE = 39;
  /** RegularExpression Id. */
  int PIPE_FALSE = 40;
  /** RegularExpression Id. */
  int POOLED_TRUE = 41;
  /** RegularExpression Id. */
  int POOLED_FALSE = 42;
  /** RegularExpression Id. */
  int PROMOTE_TRUE = 43;
  /** RegularExpression Id. */
  int PROMOTE_FALSE = 44;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE = 45;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE = 46;
  /** RegularExpression Id. */
  int RANGEVALUE_TRUE = 47;
  /** RegularExpression Id. */
  int RANGEVALUE_FALSE = 48;
  /** RegularExpression Id. */
  int RESETONCLONE_TRUE = 49;
  /** RegularExpression Id. */
  int RESETONCLONE_FALSE = 50;
  /** RegularExpression Id. */
  int RESETONREVISION_TRUE = 51;
  /** RegularExpression Id. */
  int RESETONREVISION_FALSE = 52;
  /** RegularExpression Id. */
  int REVISION_TRUE = 53;
  /** RegularExpression Id. */
  int REVISION_FALSE = 54;
  /** RegularExpression Id. */
  int TREEMENU_TRUE = 55;
  /** RegularExpression Id. */
  int TREEMENU_FALSE = 56;
  /** RegularExpression Id. */
  int TRUSTED_TRUE = 57;
  /** RegularExpression Id. */
  int TRUSTED_FALSE = 58;
  /** RegularExpression Id. */
  int UNIQUE_TRUE = 59;
  /** RegularExpression Id. */
  int UNIQUE_FALSE = 60;
  /** RegularExpression Id. */
  int VERSION = 61;
  /** RegularExpression Id. */
  int VERSION_FALSE = 62;
  /** RegularExpression Id. */
  int ALLSTATE = 63;
  /** RegularExpression Id. */
  int DEFERRED = 64;
  /** RegularExpression Id. */
  int EXECUTE = 65;
  /** RegularExpression Id. */
  int IMMEDIATE = 66;
  /** RegularExpression Id. */
  int LOCAL = 67;
  /** RegularExpression Id. */
  int LOGIN = 68;
  /** RegularExpression Id. */
  int NEWROW = 69;
  /** RegularExpression Id. */
  int OWNER = 70;
  /** RegularExpression Id. */
  int PUBLIC = 71;
  /** RegularExpression Id. */
  int REVOKE = 72;
  /** RegularExpression Id. */
  int ANY = 73;
  /** RegularExpression Id. */
  int SINGLE = 74;
  /** RegularExpression Id. */
  int ANCESTOR = 75;
  /** RegularExpression Id. */
  int DESCENDANT = 76;
  /** RegularExpression Id. */
  int RELATED = 77;
  /** RegularExpression Id. */
  int ORGANIZATION = 78;
  /** RegularExpression Id. */
  int PROJECT = 79;
  /** RegularExpression Id. */
  int CONTEXT = 80;
  /** RegularExpression Id. */
  int RESERVE = 81;
  /** RegularExpression Id. */
  int NO = 82;
  /** RegularExpression Id. */
  int INCLUSIVE = 83;
  /** RegularExpression Id. */
  int MATURITY = 84;
  /** RegularExpression Id. */
  int PROTECTED = 85;
  /** RegularExpression Id. */
  int PRIVATE = 86;
  /** RegularExpression Id. */
  int NOTPRIVATE = 87;
  /** RegularExpression Id. */
  int PPP = 88;
  /** RegularExpression Id. */
  int CATEGORY = 89;
  /** RegularExpression Id. */
  int OEM = 90;
  /** RegularExpression Id. */
  int GOLDPARTNER = 91;
  /** RegularExpression Id. */
  int PARTNER = 92;
  /** RegularExpression Id. */
  int SUPPLIER = 93;
  /** RegularExpression Id. */
  int CUSTOMER = 94;
  /** RegularExpression Id. */
  int CONTRACTOR = 95;
  /** RegularExpression Id. */
  int FORMAT_ALL = 96;
  /** RegularExpression Id. */
  int USER = 97;
  /** RegularExpression Id. */
  int BRACE_OPEN = 98;
  /** RegularExpression Id. */
  int BRACE_CLOSE = 99;
  /** RegularExpression Id. */
  int APPROVE_LIST = 100;
  /** RegularExpression Id. */
  int IGNORE_LIST = 101;
  /** RegularExpression Id. */
  int REJECT_LIST = 102;
  /** RegularExpression Id. */
  int HEIGHT = 103;
  /** RegularExpression Id. */
  int MAXLENGTH = 104;
  /** RegularExpression Id. */
  int SIZE = 105;
  /** RegularExpression Id. */
  int SETTING = 106;
  /** RegularExpression Id. */
  int ARGUMENT = 107;
  /** RegularExpression Id. */
  int ACTION = 108;
  /** RegularExpression Id. */
  int ADDRESS = 109;
  /** RegularExpression Id. */
  int ALT = 110;
  /** RegularExpression Id. */
  int APPLICATION = 111;
  /** RegularExpression Id. */
  int ATTRIBUTE = 112;
  /** RegularExpression Id. */
  int BRANCH = 113;
  /** RegularExpression Id. */
  int CHANNEL = 114;
  /** RegularExpression Id. */
  int CHECK = 115;
  /** RegularExpression Id. */
  int COMMAND = 116;
  /** RegularExpression Id. */
  int DEFAULTFORMAT = 117;
  /** RegularExpression Id. */
  int DEFINITION = 118;
  /** RegularExpression Id. */
  int DERIVED = 119;
  /** RegularExpression Id. */
  int DIMENSION = 120;
  /** RegularExpression Id. */
  int EDIT = 121;
  /** RegularExpression Id. */
  int EMAILADDRESS = 122;
  /** RegularExpression Id. */
  int FAX = 123;
  /** RegularExpression Id. */
  int FILE = 124;
  /** RegularExpression Id. */
  int FILTER = 125;
  /** RegularExpression Id. */
  int FORMAT = 126;
  /** RegularExpression Id. */
  int FULLNAME = 127;
  /** RegularExpression Id. */
  int GROUP = 128;
  /** RegularExpression Id. */
  int HREF = 129;
  /** RegularExpression Id. */
  int INPUT = 130;
  /** RegularExpression Id. */
  int KEY = 131;
  /** RegularExpression Id. */
  int LABEL = 132;
  /** RegularExpression Id. */
  int LOCALFILTER = 133;
  /** RegularExpression Id. */
  int MAJORSEQUENCE = 134;
  /** RegularExpression Id. */
  int MENU = 135;
  /** RegularExpression Id. */
  int MIME = 136;
  /** RegularExpression Id. */
  int MINORSEQUENCE = 137;
  /** RegularExpression Id. */
  int PACKAGE = 138;
  /** RegularExpression Id. */
  int PARENT = 139;
  /** RegularExpression Id. */
  int PATTERN = 140;
  /** RegularExpression Id. */
  int PHONE = 141;
  /** RegularExpression Id. */
  int PRINT = 142;
  /** RegularExpression Id. */
  int REGISTEREDNAME = 143;
  /** RegularExpression Id. */
  int ROLE = 144;
  /** RegularExpression Id. */
  int RULE = 145;
  /** RegularExpression Id. */
  int SEQUENCE = 146;
  /** RegularExpression Id. */
  int SIGNATURE = 147;
  /** RegularExpression Id. */
  int SITE = 148;
  /** RegularExpression Id. */
  int STATE = 149;
  /** RegularExpression Id. */
  int STORE = 150;
  /** RegularExpression Id. */
  int SUFFIX = 151;
  /** RegularExpression Id. */
  int SYMBOLICNAME = 152;
  /** RegularExpression Id. */
  int USESPACKAGE = 153;
  /** RegularExpression Id. */
  int UUID = 154;
  /** RegularExpression Id. */
  int VAULT = 155;
  /** RegularExpression Id. */
  int VIEW = 156;
  /** RegularExpression Id. */
  int CODE = 157;
  /** RegularExpression Id. */
  int COMMENT = 158;
  /** RegularExpression Id. */
  int CONTENT = 159;
  /** RegularExpression Id. */
  int DEFAULTVALUE = 160;
  /** RegularExpression Id. */
  int DESCRIPTION = 161;
  /** RegularExpression Id. */
  int STRING_STRING_STRING = 162;
  /** RegularExpression Id. */
  int STRING_STRING_SINGLE = 163;
  /** RegularExpression Id. */
  int STRING = 164;
  /** RegularExpression Id. */
  int SINGLE_STRING = 165;
  /** RegularExpression Id. */
  int MULTILINESTRING = 166;
  /** RegularExpression Id. */
  int MULTILINESINGLE = 167;
  /** RegularExpression Id. */
  int LISTSTRING = 168;
  /** RegularExpression Id. */
  int LISTSINGLE = 169;
  /** RegularExpression Id. */
  int LISTCLOSE = 170;
  /** RegularExpression Id. */
  int NATURALNUMBER = 171;
  /** RegularExpression Id. */
  int PROPERTY = 172;
  /** RegularExpression Id. */
  int PROPERTYTO = 173;
  /** RegularExpression Id. */
  int PROPERTYVAL = 174;
  /** RegularExpression Id. */
  int KIND = 175;
  /** RegularExpression Id. */
  int KIND_BINARY = 176;
  /** RegularExpression Id. */
  int KIND_BOOLEAN = 177;
  /** RegularExpression Id. */
  int KIND_DATE = 178;
  /** RegularExpression Id. */
  int KIND_INTEGER = 179;
  /** RegularExpression Id. */
  int KIND_REAL = 180;
  /** RegularExpression Id. */
  int KIND_STRING = 181;
  /** RegularExpression Id. */
  int KIND_EKL = 182;
  /** RegularExpression Id. */
  int KIND_EXTERNAL = 183;
  /** RegularExpression Id. */
  int KIND_JAVA = 184;
  /** RegularExpression Id. */
  int KIND_MQL = 185;
  /** RegularExpression Id. */
  int KIND_ORGANIZATION = 186;
  /** RegularExpression Id. */
  int KIND_PROJECT = 187;
  /** RegularExpression Id. */
  int KIND_ROLE = 188;
  /** RegularExpression Id. */
  int TRIGGER = 189;
  /** RegularExpression Id. */
  int TRIGEVENT = 190;
  /** RegularExpression Id. */
  int TRIGKIND_ACTION = 191;
  /** RegularExpression Id. */
  int TRIGKIND_CHECK = 192;
  /** RegularExpression Id. */
  int TRIGKIND_OVERRIDE = 193;
  /** RegularExpression Id. */
  int RANGE_EQUAL = 194;
  /** RegularExpression Id. */
  int RANGE_GREATERTHAN = 195;
  /** RegularExpression Id. */
  int RANGE_GREATERTHANEQUAL = 196;
  /** RegularExpression Id. */
  int RANGE_LESSTHAN = 197;
  /** RegularExpression Id. */
  int RANGE_LESSTHANEQUAL = 198;
  /** RegularExpression Id. */
  int RANGE_NOTEQUAL = 199;
  /** RegularExpression Id. */
  int RANGE_MATCH = 200;
  /** RegularExpression Id. */
  int RANGE_NOTMATCH = 201;
  /** RegularExpression Id. */
  int RANGE_SMATCH = 202;
  /** RegularExpression Id. */
  int RANGE_NOTSMATCH = 203;
  /** RegularExpression Id. */
  int RANGE_PROGRAM = 204;
  /** RegularExpression Id. */
  int RANGE_BETWEEN = 205;
  /** RegularExpression Id. */
  int BETW1_STRING = 206;
  /** RegularExpression Id. */
  int BETW1_SINGLE = 207;
  /** RegularExpression Id. */
  int BETW1_APOSTROPHE = 208;
  /** RegularExpression Id. */
  int BETW1_CHAR = 209;
  /** RegularExpression Id. */
  int BETW2_INCLUSIVE = 210;
  /** RegularExpression Id. */
  int BETW2_EXCLUSIVE = 211;
  /** RegularExpression Id. */
  int BETW3_STRING = 212;
  /** RegularExpression Id. */
  int BETW3_SINGLE = 213;
  /** RegularExpression Id. */
  int BETW3_APOSTROPHE = 214;
  /** RegularExpression Id. */
  int BETW3_CHAR = 215;
  /** RegularExpression Id. */
  int BETW4_INCLUSIVE = 216;
  /** RegularExpression Id. */
  int BETW4_EXCLUSIVE = 217;
  /** RegularExpression Id. */
  int UNIT = 218;
  /** RegularExpression Id. */
  int UNITNAME_STRING = 219;
  /** RegularExpression Id. */
  int UNITNAME_SINGLE = 220;
  /** RegularExpression Id. */
  int UNITDEF_START = 221;
  /** RegularExpression Id. */
  int UNITDEF_END = 222;
  /** RegularExpression Id. */
  int UNITDEF_UUID = 223;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_TRUE = 224;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_FALSE = 225;
  /** RegularExpression Id. */
  int UNITDEF_DESCRIPTION = 226;
  /** RegularExpression Id. */
  int UNITDEF_LABEL = 227;
  /** RegularExpression Id. */
  int UNITDEF_MULTIPLIER = 228;
  /** RegularExpression Id. */
  int UNITDEF_OFFSET = 229;
  /** RegularExpression Id. */
  int UNITDEF_SETTING = 230;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTY = 231;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTYVAL = 232;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTYTO = 233;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEM = 234;
  /** RegularExpression Id. */
  int UNITDEF_STRING = 235;
  /** RegularExpression Id. */
  int UNITDEF_SINGLE = 236;
  /** RegularExpression Id. */
  int UNITDEF_STRINGSTRING_STRING = 237;
  /** RegularExpression Id. */
  int UNITDEF_STRINGSTRING_SINGLE = 238;
  /** RegularExpression Id. */
  int UNITDEF_DOUBLE_DOUBLE = 239;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMNAME_STRING = 240;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMNAME_SINGLE = 241;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMDEF_TO = 242;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMDEF_UNIT = 243;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMUNIT_STRING = 244;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMUNIT_SINGLE = 245;
  /** RegularExpression Id. */
  int FOR = 246;
  /** RegularExpression Id. */
  int FOR_PATHTYPE_ALL = 247;
  /** RegularExpression Id. */
  int FOR_PATHTYPE = 248;
  /** RegularExpression Id. */
  int FOR_RELATIONSHIP_ALL = 249;
  /** RegularExpression Id. */
  int FOR_RELATIONSHIP = 250;
  /** RegularExpression Id. */
  int FOR_TYPE_ALL = 251;
  /** RegularExpression Id. */
  int FOR_TYPE = 252;
  /** RegularExpression Id. */
  int FROM = 253;
  /** RegularExpression Id. */
  int TO = 254;
  /** RegularExpression Id. */
  int CARDINALITY_ONE = 255;
  /** RegularExpression Id. */
  int CARDINALITY_MANY = 256;
  /** RegularExpression Id. */
  int TYPE_ALL = 257;
  /** RegularExpression Id. */
  int RELATIONSHIP_ALL = 258;
  /** RegularExpression Id. */
  int RELATIONSHIP = 259;
  /** RegularExpression Id. */
  int DELIMITER = 260;
  /** RegularExpression Id. */
  int DELIMITERSTRING = 261;
  /** RegularExpression Id. */
  int DELIMITERSINGLE = 262;
  /** RegularExpression Id. */
  int DELIMITER_CHARSTR = 263;
  /** RegularExpression Id. */
  int AC_ACCESS_STRING = 264;
  /** RegularExpression Id. */
  int ROUTE = 265;
  /** RegularExpression Id. */
  int ROUTEUSERSTRING = 266;
  /** RegularExpression Id. */
  int ROUTEUSERSINGLE = 267;
  /** RegularExpression Id. */
  int ROUTEUSERCLOSE = 268;
  /** RegularExpression Id. */
  int WITH = 269;
  /** RegularExpression Id. */
  int WITH_INTERFACE = 270;
  /** RegularExpression Id. */
  int ACCESS = 271;
  /** RegularExpression Id. */
  int ACCESS_ALL = 272;
  /** RegularExpression Id. */
  int ACCESS_OPEN = 273;
  /** RegularExpression Id. */
  int ACCESS_CLOSE = 274;
  /** RegularExpression Id. */
  int ACCESS_EXPECTED_SINGLE = 275;
  /** RegularExpression Id. */
  int ADMIN = 276;
  /** RegularExpression Id. */
  int ADMIN_ALL = 277;
  /** RegularExpression Id. */
  int ADMIN_OPEN = 278;
  /** RegularExpression Id. */
  int ADMIN_CLOSE = 279;
  /** RegularExpression Id. */
  int ADMIN_EXPECTED_SINGLE = 280;
  /** RegularExpression Id. */
  int PRODUCT = 281;
  /** RegularExpression Id. */
  int PRODUCT_OPEN = 282;
  /** RegularExpression Id. */
  int PRODUCT_CLOSE = 283;
  /** RegularExpression Id. */
  int PRODUCT_EXPECTED_SINGLE = 284;
  /** RegularExpression Id. */
  int TYPE = 285;
  /** RegularExpression Id. */
  int TYPE_OPEN = 286;
  /** RegularExpression Id. */
  int TYPE_CLOSE = 287;
  /** RegularExpression Id. */
  int TYPE_APPLICATION = 288;
  /** RegularExpression Id. */
  int TYPE_FULL = 289;
  /** RegularExpression Id. */
  int TYPE_BUSINESS = 290;
  /** RegularExpression Id. */
  int TYPE_SYSTEM = 291;
  /** RegularExpression Id. */
  int FIELD = 292;
  /** RegularExpression Id. */
  int FIELD_OPEN = 293;
  /** RegularExpression Id. */
  int FIELD_CLOSE = 294;
  /** RegularExpression Id. */
  int FIELD_NAME = 295;
  /** RegularExpression Id. */
  int FIELD_LABEL = 296;
  /** RegularExpression Id. */
  int FIELD_SELECT = 297;
  /** RegularExpression Id. */
  int FIELD_BOBJ = 298;
  /** RegularExpression Id. */
  int FIELD_REL = 299;
  /** RegularExpression Id. */
  int FIELD_RANGE = 300;
  /** RegularExpression Id. */
  int FIELD_HREF = 301;
  /** RegularExpression Id. */
  int FIELD_ALT = 302;
  /** RegularExpression Id. */
  int FIELD_USER = 303;
  /** RegularExpression Id. */
  int FIELD_SETTING = 304;
  /** RegularExpression Id. */
  int FIELD_STRING = 305;
  /** RegularExpression Id. */
  int FIELD_SINGLE = 306;
  /** RegularExpression Id. */
  int FIELD_SETTING_STRING = 307;
  /** RegularExpression Id. */
  int FIELD_SETTING_SINGLE = 308;
  /** RegularExpression Id. */
  int COLUMN = 309;
  /** RegularExpression Id. */
  int COLUMN_OPEN = 310;
  /** RegularExpression Id. */
  int COLUMN_CLOSE = 311;
  /** RegularExpression Id. */
  int COLUMN_NAME = 312;
  /** RegularExpression Id. */
  int COLUMN_LABEL = 313;
  /** RegularExpression Id. */
  int COLUMN_SELECT = 314;
  /** RegularExpression Id. */
  int COLUMN_BOBJ = 315;
  /** RegularExpression Id. */
  int COLUMN_REL = 316;
  /** RegularExpression Id. */
  int COLUMN_RANGE = 317;
  /** RegularExpression Id. */
  int COLUMN_HREF = 318;
  /** RegularExpression Id. */
  int COLUMN_ALT = 319;
  /** RegularExpression Id. */
  int COLUMN_HIDDEN_TRUE = 320;
  /** RegularExpression Id. */
  int COLUMN_HIDDEN_FALSE = 321;
  /** RegularExpression Id. */
  int COLUMN_USER = 322;
  /** RegularExpression Id. */
  int COLUMN_SORTTYPE = 323;
  /** RegularExpression Id. */
  int COLUMN_SETTING = 324;
  /** RegularExpression Id. */
  int COLUMN_STRING = 325;
  /** RegularExpression Id. */
  int COLUMN_SINGLE = 326;
  /** RegularExpression Id. */
  int SETTING_STRING = 327;
  /** RegularExpression Id. */
  int SETTING_SINGLE = 328;
  /** RegularExpression Id. */
  int COLUMN_SORTTYPE_ALPHA = 329;
  /** RegularExpression Id. */
  int COLUMN_SORTTYPE_NUMERIC = 330;
  /** RegularExpression Id. */
  int COLUMN_SORTTYPE_OTHER = 331;
  /** RegularExpression Id. */
  int COLUMN_SORTTYPE_NONE = 332;

  /** Lexical state. */
  int COLUMN_SORTTYPE_EXPECTED = 0;
  /** Lexical state. */
  int COLUMN_SETTING_STRING_EXPECTED = 1;
  /** Lexical state. */
  int COLUMN_STRING_EXPECTED = 2;
  /** Lexical state. */
  int COLUMN_EXPECTED = 3;
  /** Lexical state. */
  int COLUMN_OPENEXPECTED = 4;
  /** Lexical state. */
  int FIELD_SETTING_EXPECTED = 5;
  /** Lexical state. */
  int FIELD_STRING_EXPECTED = 6;
  /** Lexical state. */
  int FIELD_EXPECTED = 7;
  /** Lexical state. */
  int TYPE_EXPECTED = 8;
  /** Lexical state. */
  int PRODUCT_EXPECTED = 9;
  /** Lexical state. */
  int PRODUCT_OPEN_EXPECTED = 10;
  /** Lexical state. */
  int ADMIN_EXPECTED = 11;
  /** Lexical state. */
  int ADMIN_OPEN_EXPECTED = 12;
  /** Lexical state. */
  int ACCESS_EXPECTED = 13;
  /** Lexical state. */
  int ACCESS_OPENEXPECTED = 14;
  /** Lexical state. */
  int WITH_EXPECTED = 15;
  /** Lexical state. */
  int ROUTEUSER_EXPECTED = 16;
  /** Lexical state. */
  int DELIMITER_EXPECTED = 17;
  /** Lexical state. */
  int FOR_EXPECTED = 18;
  /** Lexical state. */
  int UNITDEF_SYSTEMUNIT_EXPECTED = 19;
  /** Lexical state. */
  int UNITDEF_SYSTEMDEF_EXPECTED = 20;
  /** Lexical state. */
  int UNITDEF_SYSTEMNAME_EXPECTED = 21;
  /** Lexical state. */
  int UNITDEF_DOUBLE_EXPECTED = 22;
  /** Lexical state. */
  int UNITDEF_STRINGSTRING_EXPECTED = 23;
  /** Lexical state. */
  int UNITDEF_STRING_EXPECTED = 24;
  /** Lexical state. */
  int UNITDEF_EXPECTED = 25;
  /** Lexical state. */
  int UNITNAME_EXPECTED = 26;
  /** Lexical state. */
  int BETW4_EXPECTED = 27;
  /** Lexical state. */
  int BETW3_EXPECTED = 28;
  /** Lexical state. */
  int BETW2_EXPECTED = 29;
  /** Lexical state. */
  int BETW1_EXPECTED = 30;
  /** Lexical state. */
  int TRIGKIND_EXPECTED = 31;
  /** Lexical state. */
  int TRIGEVENT_EXPECTED = 32;
  /** Lexical state. */
  int KIND_EXPECTED = 33;
  /** Lexical state. */
  int NATURALNUMBER_EXPECTED = 34;
  /** Lexical state. */
  int LISTOLD_EXPECTED = 35;
  /** Lexical state. */
  int MULTILINESTRING_EXPECTED = 36;
  /** Lexical state. */
  int USER_EXPECTED = 37;
  /** Lexical state. */
  int TYPE_OPEN_EXPECTED = 38;
  /** Lexical state. */
  int FIELD_OPEN_EXPECTED = 39;
  /** Lexical state. */
  int STRING_EXPECTED = 40;
  /** Lexical state. */
  int STRING_STRING_EXPECTED = 41;
  /** Lexical state. */
  int VERSION_EXPECTED = 42;
  /** Lexical state. */
  int BRACE_OPEN_EXPECTED = 43;
  /** Lexical state. */
  int DEFAULT = 44;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 4>",
    "\"abstract\"",
    "\"!abstract\"",
    "\"active\"",
    "\"!active\"",
    "\"checkouthistory\"",
    "\"!checkouthistory\"",
    "\"custom\"",
    "\"!custom\"",
    "\"downloadable\"",
    "\"!downloadable\"",
    "\"email\"",
    "\"!email\"",
    "\"enable\"",
    "\"!enable\"",
    "\"enforce\"",
    "\"!enforce\"",
    "\"enforcereserveaccess\"",
    "\"!enforcereserveaccess\"",
    "\"global\"",
    "\"!global\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"iconmail\"",
    "\"!iconmail\"",
    "\"majorrevision\"",
    "\"!majorrevision\"",
    "\"minorrevision\"",
    "\"!minorrevision\"",
    "\"multiline\"",
    "\"!multiline\"",
    "\"multivalue\"",
    "\"!multivalue\"",
    "\"needsbusinessobject\"",
    "\"!needsbusinessobject\"",
    "\"pipe\"",
    "\"!pipe\"",
    "\"pooled\"",
    "\"!pooled\"",
    "\"promote\"",
    "\"!promote\"",
    "\"published\"",
    "\"!published\"",
    "\"rangevalue\"",
    "\"!rangevalue\"",
    "\"resetonclone\"",
    "\"!resetonclone\"",
    "\"resetonrevision\"",
    "\"!resetonrevision\"",
    "\"revision\"",
    "\"!revision\"",
    "\"treemenu\"",
    "\"!treemenu\"",
    "\"trusted\"",
    "\"!trusted\"",
    "\"unique\"",
    "\"!unique\"",
    "\"version\"",
    "\"!version\"",
    "\"allstate\"",
    "\"deferred\"",
    "\"execute\"",
    "\"immediate\"",
    "\"local\"",
    "\"login\"",
    "\"newrow\"",
    "\"owner\"",
    "\"public\"",
    "\"revoke\"",
    "\"any\"",
    "\"single\"",
    "\"ancestor\"",
    "\"descendant\"",
    "\"related\"",
    "\"organization\"",
    "\"project\"",
    "\"context\"",
    "\"reserve\"",
    "\"no\"",
    "\"inclusive\"",
    "\"maturity\"",
    "\"protected\"",
    "\"private\"",
    "\"notprivate\"",
    "\"ppp\"",
    "\"category\"",
    "\"oem\"",
    "\"goldpartner\"",
    "\"partner\"",
    "\"supplier\"",
    "\"customer\"",
    "\"contractor\"",
    "<FORMAT_ALL>",
    "<USER>",
    "\"{\"",
    "\"}\"",
    "<APPROVE_LIST>",
    "<IGNORE_LIST>",
    "<REJECT_LIST>",
    "\"height\"",
    "\"maxlength\"",
    "\"size\"",
    "<SETTING>",
    "\"argument\"",
    "\"action\"",
    "\"address\"",
    "\"alt\"",
    "\"application\"",
    "\"attribute\"",
    "\"branch\"",
    "\"channel\"",
    "\"check\"",
    "<COMMAND>",
    "\"defaultformat\"",
    "\"definition\"",
    "\"derived\"",
    "\"dimension\"",
    "\"edit\"",
    "\"emailaddress\"",
    "\"fax\"",
    "\"file\"",
    "\"filter\"",
    "\"format\"",
    "\"fullname\"",
    "\"group\"",
    "\"href\"",
    "\"input\"",
    "\"key\"",
    "\"label\"",
    "\"localfilter\"",
    "\"majorsequence\"",
    "<MENU>",
    "\"mime\"",
    "\"minorsequence\"",
    "\"package\"",
    "\"parent\"",
    "\"pattern\"",
    "\"phone\"",
    "\"print\"",
    "\"registeredname\"",
    "\"role\"",
    "\"rule\"",
    "\"sequence\"",
    "\"signature\"",
    "\"site\"",
    "\"state\"",
    "\"store\"",
    "\"suffix\"",
    "\"symbolicname\"",
    "\"usespackage\"",
    "\"uuid\"",
    "\"vault\"",
    "\"view\"",
    "\"code\"",
    "\"comment\"",
    "\"content\"",
    "\"default\"",
    "\"description\"",
    "<STRING_STRING_STRING>",
    "<STRING_STRING_SINGLE>",
    "<STRING>",
    "<SINGLE_STRING>",
    "<MULTILINESTRING>",
    "<MULTILINESINGLE>",
    "<LISTSTRING>",
    "<LISTSINGLE>",
    "\"}\"",
    "<NATURALNUMBER>",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "\"kind\"",
    "\"binary\"",
    "\"boolean\"",
    "\"date\"",
    "\"integer\"",
    "\"real\"",
    "\"string\"",
    "\"ekl\"",
    "\"external\"",
    "\"java\"",
    "\"mql\"",
    "\"organization\"",
    "\"project\"",
    "\"role\"",
    "\"trigger\"",
    "<TRIGEVENT>",
    "\"action\"",
    "\"check\"",
    "\"override\"",
    "<RANGE_EQUAL>",
    "<RANGE_GREATERTHAN>",
    "<RANGE_GREATERTHANEQUAL>",
    "<RANGE_LESSTHAN>",
    "<RANGE_LESSTHANEQUAL>",
    "<RANGE_NOTEQUAL>",
    "<RANGE_MATCH>",
    "<RANGE_NOTMATCH>",
    "<RANGE_SMATCH>",
    "<RANGE_NOTSMATCH>",
    "<RANGE_PROGRAM>",
    "<RANGE_BETWEEN>",
    "<BETW1_STRING>",
    "<BETW1_SINGLE>",
    "\"\\\"\"",
    "<BETW1_CHAR>",
    "\"inclusive\"",
    "\"exclusive\"",
    "<BETW3_STRING>",
    "<BETW3_SINGLE>",
    "\"\\\"\"",
    "<BETW3_CHAR>",
    "\"inclusive\"",
    "\"exclusive\"",
    "\"unit\"",
    "<UNITNAME_STRING>",
    "<UNITNAME_SINGLE>",
    "\"{\"",
    "\"}\"",
    "\"uuid\"",
    "\"default\"",
    "\"!default\"",
    "\"description\"",
    "\"label\"",
    "\"multiplier\"",
    "\"offset\"",
    "\"setting\"",
    "\"property\"",
    "\"value\"",
    "\"to\"",
    "\"system\"",
    "<UNITDEF_STRING>",
    "<UNITDEF_SINGLE>",
    "<UNITDEF_STRINGSTRING_STRING>",
    "<UNITDEF_STRINGSTRING_SINGLE>",
    "<UNITDEF_DOUBLE_DOUBLE>",
    "<UNITDEF_SYSTEMNAME_STRING>",
    "<UNITDEF_SYSTEMNAME_SINGLE>",
    "\"to\"",
    "\"unit\"",
    "<UNITDEF_SYSTEMUNIT_STRING>",
    "<UNITDEF_SYSTEMUNIT_SINGLE>",
    "\"for\"",
    "<FOR_PATHTYPE_ALL>",
    "\"pathtype\"",
    "<FOR_RELATIONSHIP_ALL>",
    "\"relationship\"",
    "<FOR_TYPE_ALL>",
    "\"type\"",
    "<FROM>",
    "<TO>",
    "<CARDINALITY_ONE>",
    "<CARDINALITY_MANY>",
    "<TYPE_ALL>",
    "<RELATIONSHIP_ALL>",
    "\"relationship\"",
    "\"delimiter\"",
    "<DELIMITERSTRING>",
    "<DELIMITERSINGLE>",
    "<DELIMITER_CHARSTR>",
    "<AC_ACCESS_STRING>",
    "<ROUTE>",
    "<ROUTEUSERSTRING>",
    "<ROUTEUSERSINGLE>",
    "\"}\"",
    "\"with\"",
    "\"interface\"",
    "\"access\"",
    "\"all\"",
    "\"{\"",
    "\"}\"",
    "<ACCESS_EXPECTED_SINGLE>",
    "\"admin\"",
    "\"all\"",
    "\"{\"",
    "\"}\"",
    "<ADMIN_EXPECTED_SINGLE>",
    "\"product\"",
    "\"{\"",
    "\"}\"",
    "<PRODUCT_EXPECTED_SINGLE>",
    "\"type\"",
    "\"{\"",
    "\"}\"",
    "\"application\"",
    "\"full\"",
    "\"business\"",
    "\"system\"",
    "\"field\"",
    "\"{\"",
    "\"}\"",
    "\"name\"",
    "\"label\"",
    "\"select\"",
    "\"businessobject\"",
    "\"relationship\"",
    "\"range\"",
    "\"href\"",
    "\"alt\"",
    "\"user\"",
    "\"setting\"",
    "<FIELD_STRING>",
    "<FIELD_SINGLE>",
    "<FIELD_SETTING_STRING>",
    "<FIELD_SETTING_SINGLE>",
    "\"column\"",
    "\"{\"",
    "\"}\"",
    "\"name\"",
    "\"label\"",
    "\"select\"",
    "\"businessobject\"",
    "\"relationship\"",
    "\"range\"",
    "\"href\"",
    "\"alt\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"user\"",
    "\"sorttype\"",
    "\"setting\"",
    "<COLUMN_STRING>",
    "<COLUMN_SINGLE>",
    "<SETTING_STRING>",
    "<SETTING_SINGLE>",
    "\"alpha\"",
    "\"numeric\"",
    "\"other\"",
    "\"none\"",
  };

}
