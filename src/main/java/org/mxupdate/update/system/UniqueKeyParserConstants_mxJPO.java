/* Generated By:JavaCC: Do not edit this line. UniqueKeyParserConstants.java */
/*
 *  This file is part of MxUpdate <http://www.mxupdate.org>.
 *
 *  MxUpdate is a deployment tool for a PLM platform to handle
 *  administration objects as single update files (configuration item).
 *
 *  Copyright (C) 2008-2016 The MxUpdate Team - All Rights Reserved
 *
 *  You may use, distribute and modify MxUpdate under the terms of the
 *  MxUpdate license. You should have received a copy of the MxUpdate
 *  license with this file. If not, please write to <info@mxupdate.org>,
 *  or visit <www.mxupdate.org>.
 *
 */

package org.mxupdate.update.system;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface UniqueKeyParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int UUID = 5;
  /** RegularExpression Id. */
  int SYMBOLICNAME = 6;
  /** RegularExpression Id. */
  int DESCRIPTION = 7;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 8;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 9;
  /** RegularExpression Id. */
  int ENABLE_TRUE = 10;
  /** RegularExpression Id. */
  int ENABLE_FALSE = 11;
  /** RegularExpression Id. */
  int GLOBAL_TRUE = 12;
  /** RegularExpression Id. */
  int GLOBAL_FALSE = 13;
  /** RegularExpression Id. */
  int INTEGER = 14;
  /** RegularExpression Id. */
  int STRING = 15;
  /** RegularExpression Id. */
  int SINGLE = 16;
  /** RegularExpression Id. */
  int MULTILINESTRING = 17;
  /** RegularExpression Id. */
  int MULTILINESINGLE = 18;
  /** RegularExpression Id. */
  int FOR = 19;
  /** RegularExpression Id. */
  int WITH = 20;
  /** RegularExpression Id. */
  int FOR_RELATIONSHIP = 21;
  /** RegularExpression Id. */
  int FOR_TYPE = 22;
  /** RegularExpression Id. */
  int WITH_INTERFACE = 23;
  /** RegularExpression Id. */
  int FIELD = 24;
  /** RegularExpression Id. */
  int SIZE = 25;
  /** RegularExpression Id. */
  int PROPERTY = 26;
  /** RegularExpression Id. */
  int PROPERTYTO = 27;
  /** RegularExpression Id. */
  int PROPERTYVAL = 28;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 29;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 30;

  /** Lexical state. */
  int ADMINREF_EXPECTED = 0;
  /** Lexical state. */
  int WITH_EXPECTED = 1;
  /** Lexical state. */
  int FOR_EXPECTED = 2;
  /** Lexical state. */
  int MULTILINESTRING_EXPECTED = 3;
  /** Lexical state. */
  int STRING_EXPECTED = 4;
  /** Lexical state. */
  int INTEGER_EXPECTED = 5;
  /** Lexical state. */
  int DEFAULT = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 4>",
    "\"uuid\"",
    "\"symbolicname\"",
    "\"description\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"enable\"",
    "\"!enable\"",
    "\"global\"",
    "\"!global\"",
    "<INTEGER>",
    "<STRING>",
    "<SINGLE>",
    "<MULTILINESTRING>",
    "<MULTILINESINGLE>",
    "\"for\"",
    "\"with\"",
    "\"relationship\"",
    "\"type\"",
    "\"interface\"",
    "\"field\"",
    "\"size\"",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
  };

}
