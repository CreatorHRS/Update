/* Generated By:JavaCC: Do not edit this line. ProgramParserConstants.java */
package org.mxupdate.update.program;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface ProgramParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int KIND = 5;
  /** RegularExpression Id. */
  int MQL = 6;
  /** RegularExpression Id. */
  int SYMBOLICNAME = 7;
  /** RegularExpression Id. */
  int DESCRIPTION = 8;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 9;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 10;
  /** RegularExpression Id. */
  int NEEDSBUSINESSOBJECT_TRUE = 11;
  /** RegularExpression Id. */
  int NEEDSBUSINESSOBJECT_FALSE = 12;
  /** RegularExpression Id. */
  int DOWNLOADABLE_TRUE = 13;
  /** RegularExpression Id. */
  int DOWNLOADABLE_FALSE = 14;
  /** RegularExpression Id. */
  int PIPE_TRUE = 15;
  /** RegularExpression Id. */
  int PIPE_FALSE = 16;
  /** RegularExpression Id. */
  int POOLED_TRUE = 17;
  /** RegularExpression Id. */
  int POOLED_FALSE = 18;
  /** RegularExpression Id. */
  int RULE = 19;
  /** RegularExpression Id. */
  int EXECUTE = 20;
  /** RegularExpression Id. */
  int IMMEDIATE = 21;
  /** RegularExpression Id. */
  int DEFERRED = 22;
  /** RegularExpression Id. */
  int USER = 23;
  /** RegularExpression Id. */
  int CODE = 24;
  /** RegularExpression Id. */
  int FILE = 25;
  /** RegularExpression Id. */
  int STRING = 26;
  /** RegularExpression Id. */
  int SINGLE = 27;
  /** RegularExpression Id. */
  int MULTILINESTRING = 28;
  /** RegularExpression Id. */
  int MULTILINESINGLE = 29;
  /** RegularExpression Id. */
  int PROPERTY = 30;
  /** RegularExpression Id. */
  int PROPERTYTO = 31;
  /** RegularExpression Id. */
  int PROPERTYVAL = 32;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 33;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 34;

  /** Lexical state. */
  int ADMINREF_EXPECTED = 0;
  /** Lexical state. */
  int MULTILINESTRING_EXPECTED = 1;
  /** Lexical state. */
  int STRING_EXPECTED = 2;
  /** Lexical state. */
  int DEFAULT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 4>",
    "\"kind\"",
    "\"mql\"",
    "\"symbolicname\"",
    "\"description\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"needsbusinessobject\"",
    "\"!needsbusinessobject\"",
    "\"downloadable\"",
    "\"!downloadable\"",
    "\"pipe\"",
    "\"!pipe\"",
    "\"pooled\"",
    "\"!pooled\"",
    "\"rule\"",
    "\"execute\"",
    "\"immediate\"",
    "\"deferred\"",
    "\"user\"",
    "\"code\"",
    "\"file\"",
    "<STRING>",
    "<SINGLE>",
    "<MULTILINESTRING>",
    "<MULTILINESINGLE>",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
  };

}
