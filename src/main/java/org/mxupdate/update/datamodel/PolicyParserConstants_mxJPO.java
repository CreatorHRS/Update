/* Generated By:JavaCC: Do not edit this line. PolicyParserConstants.java */
package org.mxupdate.update.datamodel;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface PolicyParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DESCRIPTION = 5;
  /** RegularExpression Id. */
  int TYPE = 6;
  /** RegularExpression Id. */
  int FORMAT = 7;
  /** RegularExpression Id. */
  int STORE = 8;
  /** RegularExpression Id. */
  int DEFAULTFORMAT = 9;
  /** RegularExpression Id. */
  int ENFORCE_TRUE = 10;
  /** RegularExpression Id. */
  int ENFORCE_TRUE_VIA_VALUE = 11;
  /** RegularExpression Id. */
  int ENFORCE_TRUE_VIA_VALUE_APOSTROPHE = 12;
  /** RegularExpression Id. */
  int ENFORCE_FALSE = 13;
  /** RegularExpression Id. */
  int ENFORCE_FALSE_VIA_VALUE = 14;
  /** RegularExpression Id. */
  int ENFORCE_FALSE_VIA_VALUE_APOSTROPHE = 15;
  /** RegularExpression Id. */
  int DELIMITER = 16;
  /** RegularExpression Id. */
  int SEQUENCE = 17;
  /** RegularExpression Id. */
  int MINORSEQUENCE = 18;
  /** RegularExpression Id. */
  int MAJORSEQUENCE = 19;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 20;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE = 21;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE_APOSTROPHE = 22;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 23;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE = 24;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE_APOSTROPHE = 25;
  /** RegularExpression Id. */
  int STATE = 26;
  /** RegularExpression Id. */
  int ALLSTATE = 27;
  /** RegularExpression Id. */
  int REGISTEREDNAME = 28;
  /** RegularExpression Id. */
  int REVISION_TRUE = 29;
  /** RegularExpression Id. */
  int REVISION_TRUE_VIA_VALUE = 30;
  /** RegularExpression Id. */
  int REVISION_TRUE_VIA_VALUE_APOSTROPHE = 31;
  /** RegularExpression Id. */
  int REVISION_FALSE = 32;
  /** RegularExpression Id. */
  int REVISION_FALSE_VIA_VALUE = 33;
  /** RegularExpression Id. */
  int REVISION_FALSE_VIA_VALUE_APOSTROPHE = 34;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE = 35;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE_VIA_VALUE = 36;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE_VIA_VALUE_APOSTROPHE = 37;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE = 38;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE_VIA_VALUE = 39;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE_VIA_VALUE_APOSTROPHE = 40;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE = 41;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE_VIA_VALUE = 42;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE_VIA_VALUE_APOSTROPHE = 43;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE = 44;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE_VIA_VALUE = 45;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE_VIA_VALUE_APOSTROPHE = 46;
  /** RegularExpression Id. */
  int VERSION_TRUE = 47;
  /** RegularExpression Id. */
  int VERSION_TRUE_VIA_VALUE = 48;
  /** RegularExpression Id. */
  int VERSION_TRUE_VIA_VALUE_APOSTROPHE = 49;
  /** RegularExpression Id. */
  int VERSION_FALSE = 50;
  /** RegularExpression Id. */
  int VERSION_FALSE_VIA_VALUE = 51;
  /** RegularExpression Id. */
  int VERSION_FALSE_VIA_VALUE_APOSTROPHE = 52;
  /** RegularExpression Id. */
  int PROMOTE_TRUE = 53;
  /** RegularExpression Id. */
  int PROMOTE_TRUE_VIA_VALUE = 54;
  /** RegularExpression Id. */
  int PROMOTE_TRUE_VIA_VALUE_APOSTROPHE = 55;
  /** RegularExpression Id. */
  int PROMOTE_FALSE = 56;
  /** RegularExpression Id. */
  int PROMOTE_FALSE_VIA_VALUE = 57;
  /** RegularExpression Id. */
  int PROMOTE_FALSE_VIA_VALUE_APOSTROPHE = 58;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE = 59;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE_VIA_VALUE = 60;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE_VIA_VALUE_APOSTROPHE = 61;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE = 62;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE_VIA_VALUE = 63;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE_VIA_VALUE_APOSTROPHE = 64;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE = 65;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE_VIA_VALUE = 66;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE_VIA_VALUE_APOSTROPHE = 67;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE = 68;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_NOT = 69;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_VALUE = 70;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_VALUE_APOSTROPHE = 71;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE = 72;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE_VIA_VALUE = 73;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE_VIA_VALUE_APOSTROPHE = 74;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE = 75;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE_VIA_VALUE = 76;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE_VIA_VALUE_APOSTROPHE = 77;
  /** RegularExpression Id. */
  int REVOKE = 78;
  /** RegularExpression Id. */
  int LOGIN = 79;
  /** RegularExpression Id. */
  int OWNER = 80;
  /** RegularExpression Id. */
  int PUBLIC = 81;
  /** RegularExpression Id. */
  int USER = 82;
  /** RegularExpression Id. */
  int ACTION = 83;
  /** RegularExpression Id. */
  int CHECK = 84;
  /** RegularExpression Id. */
  int OVERRIDE = 85;
  /** RegularExpression Id. */
  int INPUT = 86;
  /** RegularExpression Id. */
  int TRIGGER = 87;
  /** RegularExpression Id. */
  int APPROVE = 88;
  /** RegularExpression Id. */
  int IGNORE = 89;
  /** RegularExpression Id. */
  int REJECT = 90;
  /** RegularExpression Id. */
  int BRANCH = 91;
  /** RegularExpression Id. */
  int SIGNATURE = 92;
  /** RegularExpression Id. */
  int ROUTE = 93;
  /** RegularExpression Id. */
  int KEY = 98;
  /** RegularExpression Id. */
  int ACCESS = 99;
  /** RegularExpression Id. */
  int STATEACCESS_STRING = 104;
  /** RegularExpression Id. */
  int STATEACCESS_SINGLE_STRING = 105;
  /** RegularExpression Id. */
  int STATEACCESS_STRING_APOSTROPHE = 106;
  /** RegularExpression Id. */
  int STATEACCESS_STRING_CHAR = 107;
  /** RegularExpression Id. */
  int FILTER = 108;
  /** RegularExpression Id. */
  int LOCALFILTER = 109;
  /** RegularExpression Id. */
  int ORGANIZATION_ANY = 110;
  /** RegularExpression Id. */
  int ORGANIZATION_SINGLE = 111;
  /** RegularExpression Id. */
  int ORGANIZATION_ANCESTOR = 112;
  /** RegularExpression Id. */
  int ORGANIZATION_DESCENDANT = 113;
  /** RegularExpression Id. */
  int ORGANIZATION_RELATED = 114;
  /** RegularExpression Id. */
  int PROJECT_ANY = 115;
  /** RegularExpression Id. */
  int PROJECT_SINGLE = 116;
  /** RegularExpression Id. */
  int PROJECT_ANCESTOR = 117;
  /** RegularExpression Id. */
  int PROJECT_DESCENDANT = 118;
  /** RegularExpression Id. */
  int PROJECT_RELATED = 119;
  /** RegularExpression Id. */
  int OWNER_ANY = 120;
  /** RegularExpression Id. */
  int OWNER_CONTEXT = 121;
  /** RegularExpression Id. */
  int RESERVE_ANY = 122;
  /** RegularExpression Id. */
  int RESERVE_CONTEXT = 123;
  /** RegularExpression Id. */
  int RESERVE_NO = 124;
  /** RegularExpression Id. */
  int RESERVE_INCLUSIVE = 125;
  /** RegularExpression Id. */
  int MATURITY_ANY = 126;
  /** RegularExpression Id. */
  int MATURITY_NO = 127;
  /** RegularExpression Id. */
  int MATURITY_PUBLIC = 128;
  /** RegularExpression Id. */
  int MATURITY_PROTECTED = 129;
  /** RegularExpression Id. */
  int MATURITY_PRIVATE = 130;
  /** RegularExpression Id. */
  int MATURITY_NOTPRIVATE = 131;
  /** RegularExpression Id. */
  int MATURITY_PPP = 132;
  /** RegularExpression Id. */
  int CATEGORY_ANY = 133;
  /** RegularExpression Id. */
  int CATEGORY_OEM = 134;
  /** RegularExpression Id. */
  int CATEGORY_GOLDPARTNER = 135;
  /** RegularExpression Id. */
  int CATEGORY_PARTNER = 136;
  /** RegularExpression Id. */
  int CATEGORY_SUPPLIER = 137;
  /** RegularExpression Id. */
  int CATEGORY_CUSTOMER = 138;
  /** RegularExpression Id. */
  int CATEGORY_CONTRACTOR = 139;
  /** RegularExpression Id. */
  int PROPERTY = 140;
  /** RegularExpression Id. */
  int PROPERTYVAL = 141;
  /** RegularExpression Id. */
  int PROPERTYTO = 142;
  /** RegularExpression Id. */
  int SS_STRING = 147;
  /** RegularExpression Id. */
  int SS_SINGLE = 148;
  /** RegularExpression Id. */
  int SS_APOSTROPHE = 149;
  /** RegularExpression Id. */
  int SS_CHAR = 150;
  /** RegularExpression Id. */
  int DELIMITER_CHAR = 155;
  /** RegularExpression Id. */
  int DELIMITER_CHARSTR = 156;
  /** RegularExpression Id. */
  int LS_CURLY_BRACKET_OPEN = 161;
  /** RegularExpression Id. */
  int LS_CURLY_BRACKET_CLOSE = 162;
  /** RegularExpression Id. */
  int LS_STRING = 163;
  /** RegularExpression Id. */
  int LS_SINGLE_STRING = 164;
  /** RegularExpression Id. */
  int LS_APOSTROPHE = 165;
  /** RegularExpression Id. */
  int LS_CHAR = 166;
  /** RegularExpression Id. */
  int SL_STRING = 171;
  /** RegularExpression Id. */
  int SL_SINGLE_STRING = 172;
  /** RegularExpression Id. */
  int SL_APOSTROPHE = 173;
  /** RegularExpression Id. */
  int SL_CHAR = 174;
  /** RegularExpression Id. */
  int S_STRING = 179;
  /** RegularExpression Id. */
  int S_SINGLE_STRING = 180;
  /** RegularExpression Id. */
  int S_APOSTROPHE = 181;
  /** RegularExpression Id. */
  int S_CHAR = 182;
  /** RegularExpression Id. */
  int LALL_CURLY_BRACKET_OPEN = 187;
  /** RegularExpression Id. */
  int LALL_ALL = 188;
  /** RegularExpression Id. */
  int L_CURLY_BRACKET_OPEN = 193;
  /** RegularExpression Id. */
  int L_CURLY_BRACKET_CLOSE = 198;
  /** RegularExpression Id. */
  int L_STRING = 199;
  /** RegularExpression Id. */
  int L_SINGLE_STRING = 200;
  /** RegularExpression Id. */
  int L_APOSTROPHE = 201;
  /** RegularExpression Id. */
  int L_CHAR = 202;
  /** RegularExpression Id. */
  int L2_CURLY_BRACKET_OPEN = 203;
  /** RegularExpression Id. */
  int L3_BRACE_STRING = 204;
  /** RegularExpression Id. */
  int L3_CHAR = 205;
  /** RegularExpression Id. */
  int L4_CURLY_BRACKET_CLOSE = 206;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STATEACCESS_EXPECTED = 1;
  /** Lexical state. */
  int STATEACCESS_STRING_EXPECTED = 2;
  /** Lexical state. */
  int PROPERTYTO_EXPECTED = 3;
  /** Lexical state. */
  int D_EXPECTED = 4;
  /** Lexical state. */
  int LS_EXPECTED = 5;
  /** Lexical state. */
  int SL_EXPECTED = 6;
  /** Lexical state. */
  int STRING_EXPECTED = 7;
  /** Lexical state. */
  int LALL_EXPECTED = 8;
  /** Lexical state. */
  int L_EXPECTED = 9;
  /** Lexical state. */
  int L2_EXPECTED = 10;
  /** Lexical state. */
  int L3_EXPECTED = 11;
  /** Lexical state. */
  int L4_EXPECTED = 12;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"description\"",
    "\"type\"",
    "\"format\"",
    "\"store\"",
    "\"defaultformat\"",
    "\"enforce\"",
    "<ENFORCE_TRUE_VIA_VALUE>",
    "<ENFORCE_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!enforce\"",
    "<ENFORCE_FALSE_VIA_VALUE>",
    "<ENFORCE_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"delimiter\"",
    "\"sequence\"",
    "\"minorsequence\"",
    "\"majorsequence\"",
    "\"hidden\"",
    "<HIDDEN_TRUE_VIA_VALUE>",
    "<HIDDEN_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!hidden\"",
    "<HIDDEN_FALSE_VIA_VALUE>",
    "<HIDDEN_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"state\"",
    "\"allstate\"",
    "\"registeredName\"",
    "\"revision\"",
    "<REVISION_TRUE_VIA_VALUE>",
    "<REVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!revision\"",
    "<REVISION_FALSE_VIA_VALUE>",
    "<REVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"minorrevision\"",
    "<MINORREVISION_TRUE_VIA_VALUE>",
    "<MINORREVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!minorrevision\"",
    "<MINORREVISION_FALSE_VIA_VALUE>",
    "<MINORREVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"majorrevision\"",
    "<MAJORREVISION_TRUE_VIA_VALUE>",
    "<MAJORREVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!majorrevision\"",
    "<MAJORREVISION_FALSE_VIA_VALUE>",
    "<MAJORREVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"version\"",
    "<VERSION_TRUE_VIA_VALUE>",
    "<VERSION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!version\"",
    "<VERSION_FALSE_VIA_VALUE>",
    "<VERSION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"promote\"",
    "<PROMOTE_TRUE_VIA_VALUE>",
    "<PROMOTE_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!promote\"",
    "<PROMOTE_FALSE_VIA_VALUE>",
    "<PROMOTE_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"checkouthistory\"",
    "<CHECKOUTHISTORY_TRUE_VIA_VALUE>",
    "<CHECKOUTHISTORY_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!checkouthistory\"",
    "<CHECKOUTHISTORY_FALSE_VIA_VALUE>",
    "<CHECKOUTHISTORY_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"enforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_TRUE_VIA_VALUE>",
    "<ENFORCERESERVEACCESS_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!enforcereserveaccess\"",
    "\"notenforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_FALSE_VIA_VALUE>",
    "<ENFORCERESERVEACCESS_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"published\"",
    "<PUBLISHED_TRUE_VIA_VALUE>",
    "<PUBLISHED_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!published\"",
    "<PUBLISHED_FALSE_VIA_VALUE>",
    "<PUBLISHED_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"revoke\"",
    "\"login\"",
    "\"owner\"",
    "\"public\"",
    "\"user\"",
    "\"action\"",
    "\"check\"",
    "\"override\"",
    "\"input\"",
    "\"trigger\"",
    "\"approve\"",
    "\"ignore\"",
    "\"reject\"",
    "\"branch\"",
    "\"signature\"",
    "\"route\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"key\"",
    "<ACCESS>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<STATEACCESS_STRING>",
    "<STATEACCESS_SINGLE_STRING>",
    "\"\\\"\"",
    "<STATEACCESS_STRING_CHAR>",
    "\"filter\"",
    "\"localfilter\"",
    "<ORGANIZATION_ANY>",
    "<ORGANIZATION_SINGLE>",
    "<ORGANIZATION_ANCESTOR>",
    "<ORGANIZATION_DESCENDANT>",
    "<ORGANIZATION_RELATED>",
    "<PROJECT_ANY>",
    "<PROJECT_SINGLE>",
    "<PROJECT_ANCESTOR>",
    "<PROJECT_DESCENDANT>",
    "<PROJECT_RELATED>",
    "<OWNER_ANY>",
    "<OWNER_CONTEXT>",
    "<RESERVE_ANY>",
    "<RESERVE_CONTEXT>",
    "<RESERVE_NO>",
    "<RESERVE_INCLUSIVE>",
    "<MATURITY_ANY>",
    "<MATURITY_NO>",
    "<MATURITY_PUBLIC>",
    "<MATURITY_PROTECTED>",
    "<MATURITY_PRIVATE>",
    "<MATURITY_NOTPRIVATE>",
    "<MATURITY_PPP>",
    "<CATEGORY_ANY>",
    "<CATEGORY_OEM>",
    "<CATEGORY_GOLDPARTNER>",
    "<CATEGORY_PARTNER>",
    "<CATEGORY_SUPPLIER>",
    "<CATEGORY_CUSTOMER>",
    "<CATEGORY_CONTRACTOR>",
    "\"property\"",
    "\"value\"",
    "\"to\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SS_STRING>",
    "<SS_SINGLE>",
    "\"\\\"\"",
    "<SS_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<DELIMITER_CHAR>",
    "<DELIMITER_CHARSTR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"}\"",
    "<LS_STRING>",
    "<LS_SINGLE_STRING>",
    "\"\\\"\"",
    "<LS_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<SL_STRING>",
    "<SL_SINGLE_STRING>",
    "\"\\\"\"",
    "<SL_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<S_STRING>",
    "<S_SINGLE_STRING>",
    "\"\\\"\"",
    "<S_CHAR>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"all\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"}\"",
    "<L_STRING>",
    "<L_SINGLE_STRING>",
    "\"\\\"\"",
    "<L_CHAR>",
    "\"{\"",
    "<L3_BRACE_STRING>",
    "<L3_CHAR>",
    "\"}\"",
    "\"{\"",
    "\"}\"",
  };

}
