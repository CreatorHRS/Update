/* Generated By:JavaCC: Do not edit this line. PolicyParserConstants.java */
package org.mxupdate.update.datamodel;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface PolicyParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DESCRIPTION = 5;
  /** RegularExpression Id. */
  int TYPE_ALL = 6;
  /** RegularExpression Id. */
  int TYPE_LIST = 7;
  /** RegularExpression Id. */
  int FORMAT_ALL = 8;
  /** RegularExpression Id. */
  int FORMAT_LIST = 9;
  /** RegularExpression Id. */
  int STORE = 10;
  /** RegularExpression Id. */
  int DEFAULTFORMAT = 11;
  /** RegularExpression Id. */
  int ENFORCE_TRUE = 12;
  /** RegularExpression Id. */
  int ENFORCE_TRUE_VIA_VALUE = 13;
  /** RegularExpression Id. */
  int ENFORCE_TRUE_VIA_VALUE_APOSTROPHE = 14;
  /** RegularExpression Id. */
  int ENFORCE_FALSE = 15;
  /** RegularExpression Id. */
  int ENFORCE_FALSE_VIA_VALUE = 16;
  /** RegularExpression Id. */
  int ENFORCE_FALSE_VIA_VALUE_APOSTROPHE = 17;
  /** RegularExpression Id. */
  int SEQUENCE = 18;
  /** RegularExpression Id. */
  int MINORSEQUENCE = 19;
  /** RegularExpression Id. */
  int MAJORSEQUENCE = 20;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 21;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE = 22;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE_APOSTROPHE = 23;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 24;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE = 25;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE_APOSTROPHE = 26;
  /** RegularExpression Id. */
  int ALLSTATE = 27;
  /** RegularExpression Id. */
  int STRING = 28;
  /** RegularExpression Id. */
  int SINGLE = 29;
  /** RegularExpression Id. */
  int MULTILINESTRING = 30;
  /** RegularExpression Id. */
  int MULTILINESINGLE = 31;
  /** RegularExpression Id. */
  int LISTSTRING = 32;
  /** RegularExpression Id. */
  int LISTSINGLE = 33;
  /** RegularExpression Id. */
  int LISTCLOSE = 34;
  /** RegularExpression Id. */
  int STATE = 35;
  /** RegularExpression Id. */
  int REGISTEREDNAME = 36;
  /** RegularExpression Id. */
  int REVISION_TRUE = 37;
  /** RegularExpression Id. */
  int REVISION_TRUE_VIA_VALUE = 38;
  /** RegularExpression Id. */
  int REVISION_TRUE_VIA_VALUE_APOSTROPHE = 39;
  /** RegularExpression Id. */
  int REVISION_FALSE = 40;
  /** RegularExpression Id. */
  int REVISION_FALSE_VIA_VALUE = 41;
  /** RegularExpression Id. */
  int REVISION_FALSE_VIA_VALUE_APOSTROPHE = 42;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE = 43;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE_VIA_VALUE = 44;
  /** RegularExpression Id. */
  int MINORREVISION_TRUE_VIA_VALUE_APOSTROPHE = 45;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE = 46;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE_VIA_VALUE = 47;
  /** RegularExpression Id. */
  int MINORREVISION_FALSE_VIA_VALUE_APOSTROPHE = 48;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE = 49;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE_VIA_VALUE = 50;
  /** RegularExpression Id. */
  int MAJORREVISION_TRUE_VIA_VALUE_APOSTROPHE = 51;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE = 52;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE_VIA_VALUE = 53;
  /** RegularExpression Id. */
  int MAJORREVISION_FALSE_VIA_VALUE_APOSTROPHE = 54;
  /** RegularExpression Id. */
  int VERSION_TRUE = 55;
  /** RegularExpression Id. */
  int VERSION_TRUE_VIA_VALUE = 56;
  /** RegularExpression Id. */
  int VERSION_TRUE_VIA_VALUE_APOSTROPHE = 57;
  /** RegularExpression Id. */
  int VERSION_FALSE = 58;
  /** RegularExpression Id. */
  int VERSION_FALSE_VIA_VALUE = 59;
  /** RegularExpression Id. */
  int VERSION_FALSE_VIA_VALUE_APOSTROPHE = 60;
  /** RegularExpression Id. */
  int PROMOTE_TRUE = 61;
  /** RegularExpression Id. */
  int PROMOTE_TRUE_VIA_VALUE = 62;
  /** RegularExpression Id. */
  int PROMOTE_TRUE_VIA_VALUE_APOSTROPHE = 63;
  /** RegularExpression Id. */
  int PROMOTE_FALSE = 64;
  /** RegularExpression Id. */
  int PROMOTE_FALSE_VIA_VALUE = 65;
  /** RegularExpression Id. */
  int PROMOTE_FALSE_VIA_VALUE_APOSTROPHE = 66;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE = 67;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE_VIA_VALUE = 68;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_TRUE_VIA_VALUE_APOSTROPHE = 69;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE = 70;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE_VIA_VALUE = 71;
  /** RegularExpression Id. */
  int CHECKOUTHISTORY_FALSE_VIA_VALUE_APOSTROPHE = 72;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE = 73;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE_VIA_VALUE = 74;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_TRUE_VIA_VALUE_APOSTROPHE = 75;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE = 76;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_NOT = 77;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_VALUE = 78;
  /** RegularExpression Id. */
  int ENFORCERESERVEACCESS_FALSE_VIA_VALUE_APOSTROPHE = 79;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE = 80;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE_VIA_VALUE = 81;
  /** RegularExpression Id. */
  int PUBLISHED_TRUE_VIA_VALUE_APOSTROPHE = 82;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE = 83;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE_VIA_VALUE = 84;
  /** RegularExpression Id. */
  int PUBLISHED_FALSE_VIA_VALUE_APOSTROPHE = 85;
  /** RegularExpression Id. */
  int REVOKE = 86;
  /** RegularExpression Id. */
  int LOGIN = 87;
  /** RegularExpression Id. */
  int OWNER = 88;
  /** RegularExpression Id. */
  int PUBLIC = 89;
  /** RegularExpression Id. */
  int USER = 90;
  /** RegularExpression Id. */
  int INPUT = 91;
  /** RegularExpression Id. */
  int APPROVE_LIST = 92;
  /** RegularExpression Id. */
  int IGNORE_LIST = 93;
  /** RegularExpression Id. */
  int REJECT_LIST = 94;
  /** RegularExpression Id. */
  int BRANCH = 95;
  /** RegularExpression Id. */
  int SIGNATURE = 96;
  /** RegularExpression Id. */
  int LEGACYACTION = 97;
  /** RegularExpression Id. */
  int LEGACYCHECK = 98;
  /** RegularExpression Id. */
  int TRIGGER = 99;
  /** RegularExpression Id. */
  int TRIGEVENT = 100;
  /** RegularExpression Id. */
  int ACTION = 101;
  /** RegularExpression Id. */
  int CHECK = 102;
  /** RegularExpression Id. */
  int OVERRIDE = 103;
  /** RegularExpression Id. */
  int KEY = 104;
  /** RegularExpression Id. */
  int ACCESS = 105;
  /** RegularExpression Id. */
  int STATEACCESS_STRING = 106;
  /** RegularExpression Id. */
  int STATEACCESS_SINGLE = 107;
  /** RegularExpression Id. */
  int FILTER = 108;
  /** RegularExpression Id. */
  int LOCALFILTER = 109;
  /** RegularExpression Id. */
  int ORGANIZATION_ANY = 110;
  /** RegularExpression Id. */
  int ORGANIZATION_SINGLE = 111;
  /** RegularExpression Id. */
  int ORGANIZATION_ANCESTOR = 112;
  /** RegularExpression Id. */
  int ORGANIZATION_DESCENDANT = 113;
  /** RegularExpression Id. */
  int ORGANIZATION_RELATED = 114;
  /** RegularExpression Id. */
  int PROJECT_ANY = 115;
  /** RegularExpression Id. */
  int PROJECT_SINGLE = 116;
  /** RegularExpression Id. */
  int PROJECT_ANCESTOR = 117;
  /** RegularExpression Id. */
  int PROJECT_DESCENDANT = 118;
  /** RegularExpression Id. */
  int PROJECT_RELATED = 119;
  /** RegularExpression Id. */
  int OWNER_ANY = 120;
  /** RegularExpression Id. */
  int OWNER_CONTEXT = 121;
  /** RegularExpression Id. */
  int RESERVE_ANY = 122;
  /** RegularExpression Id. */
  int RESERVE_CONTEXT = 123;
  /** RegularExpression Id. */
  int RESERVE_NO = 124;
  /** RegularExpression Id. */
  int RESERVE_INCLUSIVE = 125;
  /** RegularExpression Id. */
  int MATURITY_ANY = 126;
  /** RegularExpression Id. */
  int MATURITY_NO = 127;
  /** RegularExpression Id. */
  int MATURITY_PUBLIC = 128;
  /** RegularExpression Id. */
  int MATURITY_PROTECTED = 129;
  /** RegularExpression Id. */
  int MATURITY_PRIVATE = 130;
  /** RegularExpression Id. */
  int MATURITY_NOTPRIVATE = 131;
  /** RegularExpression Id. */
  int MATURITY_PPP = 132;
  /** RegularExpression Id. */
  int CATEGORY_ANY = 133;
  /** RegularExpression Id. */
  int CATEGORY_OEM = 134;
  /** RegularExpression Id. */
  int CATEGORY_GOLDPARTNER = 135;
  /** RegularExpression Id. */
  int CATEGORY_PARTNER = 136;
  /** RegularExpression Id. */
  int CATEGORY_SUPPLIER = 137;
  /** RegularExpression Id. */
  int CATEGORY_CUSTOMER = 138;
  /** RegularExpression Id. */
  int CATEGORY_CONTRACTOR = 139;
  /** RegularExpression Id. */
  int PROPERTY = 140;
  /** RegularExpression Id. */
  int PROPERTYTO = 141;
  /** RegularExpression Id. */
  int PROPERTYVAL = 142;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 143;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 144;
  /** RegularExpression Id. */
  int DELIMITER = 145;
  /** RegularExpression Id. */
  int DELIMITERSTRING = 146;
  /** RegularExpression Id. */
  int DELIMITERSINGLE = 147;
  /** RegularExpression Id. */
  int DELIMITER_CHARSTR = 148;
  /** RegularExpression Id. */
  int ROUTE = 149;
  /** RegularExpression Id. */
  int ROUTEUSERSTRING = 150;
  /** RegularExpression Id. */
  int ROUTEUSERSINGLE = 151;
  /** RegularExpression Id. */
  int ROUTEUSERCLOSE = 152;

  /** Lexical state. */
  int ROUTEUSER_EXPECTED = 0;
  /** Lexical state. */
  int DELIMITER_EXPECTED = 1;
  /** Lexical state. */
  int ADMINREF_EXPECTED = 2;
  /** Lexical state. */
  int STATEACCESS_STRING_EXPECTED = 3;
  /** Lexical state. */
  int STATEACCESS_EXPECTED = 4;
  /** Lexical state. */
  int TRIGKIND_EXPECTED = 5;
  /** Lexical state. */
  int TRIGEVENT_EXPECTED = 6;
  /** Lexical state. */
  int LIST_EXPECTED = 7;
  /** Lexical state. */
  int MULTILINESTRING_EXPECTED = 8;
  /** Lexical state. */
  int STRING_EXPECTED = 9;
  /** Lexical state. */
  int DEFAULT = 10;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 4>",
    "\"description\"",
    "<TYPE_ALL>",
    "<TYPE_LIST>",
    "<FORMAT_ALL>",
    "<FORMAT_LIST>",
    "\"store\"",
    "\"defaultformat\"",
    "\"enforce\"",
    "<ENFORCE_TRUE_VIA_VALUE>",
    "<ENFORCE_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!enforce\"",
    "<ENFORCE_FALSE_VIA_VALUE>",
    "<ENFORCE_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"sequence\"",
    "\"minorsequence\"",
    "\"majorsequence\"",
    "\"hidden\"",
    "<HIDDEN_TRUE_VIA_VALUE>",
    "<HIDDEN_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!hidden\"",
    "<HIDDEN_FALSE_VIA_VALUE>",
    "<HIDDEN_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"allstate\"",
    "<STRING>",
    "<SINGLE>",
    "<MULTILINESTRING>",
    "<MULTILINESINGLE>",
    "<LISTSTRING>",
    "<LISTSINGLE>",
    "\"}\"",
    "\"state\"",
    "\"registeredName\"",
    "\"revision\"",
    "<REVISION_TRUE_VIA_VALUE>",
    "<REVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!revision\"",
    "<REVISION_FALSE_VIA_VALUE>",
    "<REVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"minorrevision\"",
    "<MINORREVISION_TRUE_VIA_VALUE>",
    "<MINORREVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!minorrevision\"",
    "<MINORREVISION_FALSE_VIA_VALUE>",
    "<MINORREVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"majorrevision\"",
    "<MAJORREVISION_TRUE_VIA_VALUE>",
    "<MAJORREVISION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!majorrevision\"",
    "<MAJORREVISION_FALSE_VIA_VALUE>",
    "<MAJORREVISION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"version\"",
    "<VERSION_TRUE_VIA_VALUE>",
    "<VERSION_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!version\"",
    "<VERSION_FALSE_VIA_VALUE>",
    "<VERSION_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"promote\"",
    "<PROMOTE_TRUE_VIA_VALUE>",
    "<PROMOTE_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!promote\"",
    "<PROMOTE_FALSE_VIA_VALUE>",
    "<PROMOTE_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"checkouthistory\"",
    "<CHECKOUTHISTORY_TRUE_VIA_VALUE>",
    "<CHECKOUTHISTORY_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!checkouthistory\"",
    "<CHECKOUTHISTORY_FALSE_VIA_VALUE>",
    "<CHECKOUTHISTORY_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"enforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_TRUE_VIA_VALUE>",
    "<ENFORCERESERVEACCESS_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!enforcereserveaccess\"",
    "\"notenforcereserveaccess\"",
    "<ENFORCERESERVEACCESS_FALSE_VIA_VALUE>",
    "<ENFORCERESERVEACCESS_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"published\"",
    "<PUBLISHED_TRUE_VIA_VALUE>",
    "<PUBLISHED_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!published\"",
    "<PUBLISHED_FALSE_VIA_VALUE>",
    "<PUBLISHED_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"revoke\"",
    "\"login\"",
    "\"owner\"",
    "\"public\"",
    "\"user\"",
    "\"input\"",
    "<APPROVE_LIST>",
    "<IGNORE_LIST>",
    "<REJECT_LIST>",
    "\"branch\"",
    "\"signature\"",
    "\"action\"",
    "\"check\"",
    "\"trigger\"",
    "<TRIGEVENT>",
    "\"action\"",
    "\"check\"",
    "\"override\"",
    "\"key\"",
    "<ACCESS>",
    "<STATEACCESS_STRING>",
    "<STATEACCESS_SINGLE>",
    "\"filter\"",
    "\"localfilter\"",
    "<ORGANIZATION_ANY>",
    "<ORGANIZATION_SINGLE>",
    "<ORGANIZATION_ANCESTOR>",
    "<ORGANIZATION_DESCENDANT>",
    "<ORGANIZATION_RELATED>",
    "<PROJECT_ANY>",
    "<PROJECT_SINGLE>",
    "<PROJECT_ANCESTOR>",
    "<PROJECT_DESCENDANT>",
    "<PROJECT_RELATED>",
    "<OWNER_ANY>",
    "<OWNER_CONTEXT>",
    "<RESERVE_ANY>",
    "<RESERVE_CONTEXT>",
    "<RESERVE_NO>",
    "<RESERVE_INCLUSIVE>",
    "<MATURITY_ANY>",
    "<MATURITY_NO>",
    "<MATURITY_PUBLIC>",
    "<MATURITY_PROTECTED>",
    "<MATURITY_PRIVATE>",
    "<MATURITY_NOTPRIVATE>",
    "<MATURITY_PPP>",
    "<CATEGORY_ANY>",
    "<CATEGORY_OEM>",
    "<CATEGORY_GOLDPARTNER>",
    "<CATEGORY_PARTNER>",
    "<CATEGORY_SUPPLIER>",
    "<CATEGORY_CUSTOMER>",
    "<CATEGORY_CONTRACTOR>",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
    "\"delimiter\"",
    "<DELIMITERSTRING>",
    "<DELIMITERSINGLE>",
    "<DELIMITER_CHARSTR>",
    "<ROUTE>",
    "<ROUTEUSERSTRING>",
    "<ROUTEUSERSINGLE>",
    "\"}\"",
    "\"{\"",
    "\"}\"",
  };

}
