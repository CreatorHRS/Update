/* Generated By:JavaCC: Do not edit this line. RelationshipDefParserConstants.java */
package org.mxupdate.update.datamodel.relationship;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RelationshipDefParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DESCRIPTION = 5;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 6;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 7;
  /** RegularExpression Id. */
  int PREVENTDUPLICATES_TRUE = 8;
  /** RegularExpression Id. */
  int PREVENTDUPLICATES_FALSE = 9;
  /** RegularExpression Id. */
  int ATTRIBUTE = 10;
  /** RegularExpression Id. */
  int RULE = 11;
  /** RegularExpression Id. */
  int STRING = 16;
  /** RegularExpression Id. */
  int SINGLE = 17;
  /** RegularExpression Id. */
  int APOSTROPHE = 18;
  /** RegularExpression Id. */
  int CHAR = 19;
  /** RegularExpression Id. */
  int KIND = 20;
  /** RegularExpression Id. */
  int BASIC = 25;
  /** RegularExpression Id. */
  int COMPOSITIONAL = 26;
  /** RegularExpression Id. */
  int TRIGGER = 27;
  /** RegularExpression Id. */
  int INPUT = 28;
  /** RegularExpression Id. */
  int TRIGEVENT = 33;
  /** RegularExpression Id. */
  int ACTION = 38;
  /** RegularExpression Id. */
  int CHECK = 39;
  /** RegularExpression Id. */
  int OVERRIDE = 40;
  /** RegularExpression Id. */
  int START_FROM = 41;
  /** RegularExpression Id. */
  int START_TO = 42;
  /** RegularExpression Id. */
  int FROMTO_PROPAGATEMODIFY_TRUE = 47;
  /** RegularExpression Id. */
  int FROMTO_PROPAGATEMODIFY_FALSE = 48;
  /** RegularExpression Id. */
  int FROMTO_PROPAGATECONNECTION_TRUE = 49;
  /** RegularExpression Id. */
  int FROMTO_PROPAGATECONNECTION_FALSE = 50;
  /** RegularExpression Id. */
  int FROMTO_MEANING = 51;
  /** RegularExpression Id. */
  int FROMTO_REVISION_NONE = 52;
  /** RegularExpression Id. */
  int FROMTO_REVISION_FLOAT = 53;
  /** RegularExpression Id. */
  int FROMTO_REVISION_REPLICATE = 54;
  /** RegularExpression Id. */
  int FROMTO_CLONE_NONE = 55;
  /** RegularExpression Id. */
  int FROMTO_CLONE_FLOAT = 56;
  /** RegularExpression Id. */
  int FROMTO_CLONE_REPLICATE = 57;
  /** RegularExpression Id. */
  int FROMTO_CARDINALITY_ONE = 58;
  /** RegularExpression Id. */
  int FROMTO_CARDINALITY_MANY = 59;
  /** RegularExpression Id. */
  int FROMTO_TYPE_ALL = 60;
  /** RegularExpression Id. */
  int FROMTO_TYPE = 61;
  /** RegularExpression Id. */
  int FROMTO_RELATIONSHIP_ALL = 62;
  /** RegularExpression Id. */
  int FROMTO_RELATIONSHIP = 63;
  /** RegularExpression Id. */
  int FROMTO_END = 64;
  /** RegularExpression Id. */
  int FROMTO_STRING = 69;
  /** RegularExpression Id. */
  int FROMTO_SINGLE = 70;
  /** RegularExpression Id. */
  int FROMTO_APOSTROPHE = 71;
  /** RegularExpression Id. */
  int FROMTO_CHAR = 72;
  /** RegularExpression Id. */
  int PROPERTY = 73;
  /** RegularExpression Id. */
  int PROPERTYTO = 74;
  /** RegularExpression Id. */
  int PROPERTYVAL = 75;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 80;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 81;
  /** RegularExpression Id. */
  int ADMINTYPE_APOSTROPHE = 82;
  /** RegularExpression Id. */
  int ADMINTYPE_CHAR = 83;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STRING_EXPECTED = 1;
  /** Lexical state. */
  int KIND_EXPECTED = 2;
  /** Lexical state. */
  int TRIGEVENT_EXPECTED = 3;
  /** Lexical state. */
  int TRIGKIND_EXPECTED = 4;
  /** Lexical state. */
  int FROMTO_EXPECTED = 5;
  /** Lexical state. */
  int FROMTO_STRING_EXPECTED = 6;
  /** Lexical state. */
  int ADMINREF_EXPECTED = 7;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"description\"",
    "\"hidden\"",
    "\"!hidden\"",
    "\"preventduplicates\"",
    "\"!preventduplicates\"",
    "\"attribute\"",
    "\"rule\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<STRING>",
    "<SINGLE>",
    "\"\\\"\"",
    "<CHAR>",
    "\"kind\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"basic\"",
    "\"compositional\"",
    "\"trigger\"",
    "\"input\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<TRIGEVENT>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"action\"",
    "\"check\"",
    "\"override\"",
    "<START_FROM>",
    "<START_TO>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"propagatemodify\"",
    "\"!propagatemodify\"",
    "\"propagateconnection\"",
    "\"!propagateconnection\"",
    "\"meaning\"",
    "<FROMTO_REVISION_NONE>",
    "<FROMTO_REVISION_FLOAT>",
    "<FROMTO_REVISION_REPLICATE>",
    "<FROMTO_CLONE_NONE>",
    "<FROMTO_CLONE_FLOAT>",
    "<FROMTO_CLONE_REPLICATE>",
    "<FROMTO_CARDINALITY_ONE>",
    "<FROMTO_CARDINALITY_MANY>",
    "<FROMTO_TYPE_ALL>",
    "\"type\"",
    "<FROMTO_RELATIONSHIP_ALL>",
    "\"relationship\"",
    "\"}\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<FROMTO_STRING>",
    "<FROMTO_SINGLE>",
    "\"\\\"\"",
    "<FROMTO_CHAR>",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
    "\"\\\"\"",
    "<ADMINTYPE_CHAR>",
  };

}
