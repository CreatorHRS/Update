/* RelationshipDefParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. RelationshipDefParserTokenManager.java */
package org.mxupdate.update.datamodel.relationship;
import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import org.mxupdate.mapping.TypeDef_mxJPO;
import org.mxupdate.update.datamodel.Relationship_mxJPO;
import org.mxupdate.update.datamodel.Relationship_mxJPO.Kind;
import org.mxupdate.update.datamodel.helper.TriggerList_mxJPO.Trigger;
import org.mxupdate.update.util.AbstractParser_mxJPO;
import org.mxupdate.update.util.AbstractParser_mxJPO.ParseException;
import org.mxupdate.update.util.AbstractParser_mxJPO.SimpleCharStream;
import org.mxupdate.update.util.AbstractParser_mxJPO.Token;
import org.mxupdate.update.util.AbstractParser_mxJPO.TokenMgrError;
import org.mxupdate.update.util.AdminPropertyList_mxJPO.AdminProperty;
import org.mxupdate.update.util.ParameterCache_mxJPO;

/** Token Manager. */
@SuppressWarnings("unused")public class RelationshipDefParserTokenManager_mxJPO implements RelationshipDefParserConstants_mxJPO {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa1_4(0x4000000000L);
      case 99:
         return jjMoveStringLiteralDfa1_4(0x8000000000L);
      case 111:
         return jjMoveStringLiteralDfa1_4(0x10000000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_4(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa2_4(active0, 0x4000000000L);
      case 104:
         return jjMoveStringLiteralDfa2_4(active0, 0x8000000000L);
      case 118:
         return jjMoveStringLiteralDfa2_4(active0, 0x10000000000L);
      default :
         return 2;
   }
}
private int jjMoveStringLiteralDfa2_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 2;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 2;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa3_4(active0, 0x18000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_4(active0, 0x4000000000L);
      default :
         return 3;
   }
}
private int jjMoveStringLiteralDfa3_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 3;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 3;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa4_4(active0, 0x8000000000L);
      case 105:
         return jjMoveStringLiteralDfa4_4(active0, 0x4000000000L);
      case 114:
         return jjMoveStringLiteralDfa4_4(active0, 0x10000000000L);
      default :
         return 4;
   }
}
private int jjMoveStringLiteralDfa4_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 4;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 4;
   }
   switch(curChar)
   {
      case 107:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(4, 39);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_4(active0, 0x4000000000L);
      case 114:
         return jjMoveStringLiteralDfa5_4(active0, 0x10000000000L);
      default :
         return 5;
   }
   return 5;
}
private int jjMoveStringLiteralDfa5_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 5;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 5;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa6_4(active0, 0x10000000000L);
      case 110:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStopAtPos(5, 38);
         break;
      default :
         return 6;
   }
   return 6;
}
private int jjMoveStringLiteralDfa6_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 6;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 6;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa7_4(active0, 0x10000000000L);
      default :
         return 7;
   }
}
private int jjMoveStringLiteralDfa7_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 7;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 7;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(7, 40);
         break;
      default :
         return 8;
   }
   return 8;
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x8000000L) != 0L || (active1 & 0x400L) != 0L)
            return 6;
         return -1;
      case 1:
         if ((active1 & 0x400L) != 0L)
            return 7;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_0(0x280L, 0x0L);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 104:
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x10000000L, 0x0L);
      case 107:
         return jjMoveStringLiteralDfa1_0(0x100000L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x100L, 0x200L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x400L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800L);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x80L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x100040L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000L, active1, 0L);
      case 111:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(1, 74, 7);
         break;
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x200L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000100L, active1, 0x200L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa3_0(active0, 0x40L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x100L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000080L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x800L, active1, 0x800L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x200L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x20L, active1, 0L);
      case 100:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(3, 20);
         return jjMoveStringLiteralDfa4_0(active0, 0xc0L, active1, 0L);
      case 101:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(3, 11);
         return jjMoveStringLiteralDfa4_0(active0, 0x200L, active1, 0L);
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000L, active1, 0x800L);
      case 118:
         return jjMoveStringLiteralDfa4_0(active0, 0x100L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80L, active1, 0L);
      case 101:
         if ((active1 & 0x800L) != 0L)
            return jjStopAtPos(4, 75);
         return jjMoveStringLiteralDfa5_0(active0, 0x140L, active1, 0x200L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x20L, active1, 0L);
      case 116:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(4, 28);
         break;
      case 118:
         return jjMoveStringLiteralDfa5_0(active0, 0x200L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_0(active0, 0x400L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000280L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x20L, active1, 0L);
      case 110:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(5, 6);
         return jjMoveStringLiteralDfa6_0(active0, 0x100L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 110:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(6, 7);
         return jjMoveStringLiteralDfa7_0(active0, 0x200L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa7_0(active0, 0x20L, active1, 0L);
      case 114:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(6, 27);
         break;
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0x100L, active1, 0x200L);
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa8_0(active0, 0x100L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x620L, active1, 0L);
      case 121:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(7, 73);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa9_0(active0, 0x200L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(8, 10);
         break;
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x20L);
      case 117:
         return jjMoveStringLiteralDfa9_0(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x20L);
      case 112:
         return jjMoveStringLiteralDfa10_0(active0, 0x100L);
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa11_0(active0, 0x100L);
      case 110:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(10, 5);
         break;
      case 112:
         return jjMoveStringLiteralDfa11_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x100L);
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa13_0(active0, 0x100L);
      case 105:
         return jjMoveStringLiteralDfa13_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa14_0(active0, 0x100L);
      case 99:
         return jjMoveStringLiteralDfa14_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa15_0(active0, 0x200L);
      case 116:
         return jjMoveStringLiteralDfa15_0(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x100L);
      case 116:
         return jjMoveStringLiteralDfa16_0(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa17_0(active0, 0x200L);
      case 115:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(16, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L);
}
private int jjMoveStringLiteralDfa17_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(15, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, active0, 0L);
      return 17;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(17, 9);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 10;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(0, 1); }
                  break;
               case 7:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(2, 3); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 0:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if (curChar == 123 && kind > 41)
                     kind = 41;
                  break;
               case 3:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 4:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if (curChar == 123 && kind > 42)
                     kind = 42;
                  break;
               case 9:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 10 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_7(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_7(int pos, long active0, long active1){
   return jjMoveNfa_7(jjStopStringLiteralDfa_7(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_7(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_7(0, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 81)
                        kind = 81;
                     { jjCheckNAdd(5); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 1:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 2:
                  if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 4:
                  if (curChar == 34 && kind > 80)
                     kind = 80;
                  break;
               case 5:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  { jjAddStates(4, 6); }
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(4, 6); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1){
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_6(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_6(0, 0);
   }
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     { jjCheckNAdd(5); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 1:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 2:
                  if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 4:
                  if (curChar == 34 && kind > 69)
                     kind = 69;
                  break;
               case 5:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAdd(5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  { jjAddStates(4, 6); }
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(4, 6); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa1_2(0x2000000L);
      case 99:
         return jjMoveStringLiteralDfa1_2(0x4000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_2(active0, 0x2000000L);
      case 111:
         return jjMoveStringLiteralDfa2_2(active0, 0x4000000L);
      default :
         return 2;
   }
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 2;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 2;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa3_2(active0, 0x4000000L);
      case 115:
         return jjMoveStringLiteralDfa3_2(active0, 0x2000000L);
      default :
         return 3;
   }
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 3;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 3;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa4_2(active0, 0x2000000L);
      case 112:
         return jjMoveStringLiteralDfa4_2(active0, 0x4000000L);
      default :
         return 4;
   }
}
private int jjMoveStringLiteralDfa4_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 4;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 4;
   }
   switch(curChar)
   {
      case 99:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(4, 25);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_2(active0, 0x4000000L);
      default :
         return 5;
   }
   return 5;
}
private int jjMoveStringLiteralDfa5_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 5;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 5;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa6_2(active0, 0x4000000L);
      default :
         return 6;
   }
}
private int jjMoveStringLiteralDfa6_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 6;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 6;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa7_2(active0, 0x4000000L);
      default :
         return 7;
   }
}
private int jjMoveStringLiteralDfa7_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 7;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 7;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa8_2(active0, 0x4000000L);
      default :
         return 8;
   }
}
private int jjMoveStringLiteralDfa8_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 8;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 8;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa9_2(active0, 0x4000000L);
      default :
         return 9;
   }
}
private int jjMoveStringLiteralDfa9_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 9;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 9;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa10_2(active0, 0x4000000L);
      default :
         return 10;
   }
}
private int jjMoveStringLiteralDfa10_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 10;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_2(active0, 0x4000000L);
      default :
         return 11;
   }
}
private int jjMoveStringLiteralDfa11_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 11;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_2(active0, 0x4000000L);
      default :
         return 12;
   }
}
private int jjMoveStringLiteralDfa12_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return 12;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 12;
   }
   switch(curChar)
   {
      case 108:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(12, 26);
         break;
      default :
         return 13;
   }
   return 13;
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 20;
         if ((active0 & 0x2000000000000000L) != 0L)
            return 6;
         return -1;
      case 1:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 19;
         if ((active0 & 0x2000000000000000L) != 0L)
            return 5;
         return -1;
      case 2:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 0;
         if ((active0 & 0x8000000000000000L) != 0L)
            return 63;
         return -1;
      case 3:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 1;
         if ((active0 & 0x8000000000000000L) != 0L)
            return 62;
         return -1;
      case 4:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 61;
         return -1;
      case 5:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 60;
         return -1;
      case 6:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 59;
         return -1;
      case 7:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 58;
         return -1;
      case 8:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 57;
         return -1;
      case 9:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 56;
         return -1;
      case 10:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 51;
         return -1;
      case 11:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 52;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1){
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_5(0x5000000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_5(0x8000000000000L);
      case 112:
         return jjMoveStringLiteralDfa1_5(0x2800000000000L);
      case 114:
         return jjMoveStringLiteralDfa1_5(0x8000000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_5(0x2000000000000000L);
      case 125:
         return jjStopAtPos(0, 64);
      default :
         return jjMoveNfa_5(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_5(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa2_5(active0, 0x8008000000000000L);
      case 112:
         return jjMoveStringLiteralDfa2_5(active0, 0x5000000000000L);
      case 114:
         return jjMoveStringLiteralDfa2_5(active0, 0x2800000000000L);
      case 121:
         return jjMoveStringLiteralDfa2_5(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_5(active0, 0x8000000000000L);
      case 108:
         return jjMoveStringLiteralDfa3_5(active0, 0x8000000000000000L);
      case 111:
         return jjMoveStringLiteralDfa3_5(active0, 0x2800000000000L);
      case 112:
         return jjMoveStringLiteralDfa3_5(active0, 0x2000000000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_5(active0, 0x5000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_5(active0, 0x8000000000000000L);
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_5(3, 61, 1);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_5(active0, 0x8000000000000L);
      case 111:
         return jjMoveStringLiteralDfa4_5(active0, 0x5000000000000L);
      case 112:
         return jjMoveStringLiteralDfa4_5(active0, 0x2800000000000L);
      default :
         break;
   }
   return jjStartNfa_5(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_5(active0, 0x2800000000000L);
      case 105:
         return jjMoveStringLiteralDfa5_5(active0, 0x8000000000000L);
      case 112:
         return jjMoveStringLiteralDfa5_5(active0, 0x5000000000000L);
      case 116:
         return jjMoveStringLiteralDfa5_5(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_5(active0, 0x5000000000000L);
      case 103:
         return jjMoveStringLiteralDfa6_5(active0, 0x2800000000000L);
      case 105:
         return jjMoveStringLiteralDfa6_5(active0, 0x8000000000000000L);
      case 110:
         return jjMoveStringLiteralDfa6_5(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_5(active0, 0x2800000000000L);
      case 103:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(6, 51);
         return jjMoveStringLiteralDfa7_5(active0, 0x5000000000000L);
      case 111:
         return jjMoveStringLiteralDfa7_5(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa8_5(active0, 0x5000000000000L);
      case 110:
         return jjMoveStringLiteralDfa8_5(active0, 0x8000000000000000L);
      case 116:
         return jjMoveStringLiteralDfa8_5(active0, 0x2800000000000L);
      default :
         break;
   }
   return jjStartNfa_5(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa9_5(active0, 0x2800000000000L);
      case 115:
         return jjMoveStringLiteralDfa9_5(active0, 0x8000000000000000L);
      case 116:
         return jjMoveStringLiteralDfa9_5(active0, 0x5000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa10_5(active0, 0x2000000000000L);
      case 101:
         return jjMoveStringLiteralDfa10_5(active0, 0x5000000000000L);
      case 104:
         return jjMoveStringLiteralDfa10_5(active0, 0x8000000000000000L);
      case 109:
         return jjMoveStringLiteralDfa10_5(active0, 0x800000000000L);
      default :
         break;
   }
   return jjStartNfa_5(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa11_5(active0, 0x4000000000000L);
      case 105:
         return jjMoveStringLiteralDfa11_5(active0, 0x8000000000000000L);
      case 109:
         return jjMoveStringLiteralDfa11_5(active0, 0x1000000000000L);
      case 111:
         return jjMoveStringLiteralDfa11_5(active0, 0x2800000000000L);
      default :
         break;
   }
   return jjStartNfa_5(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa12_5(active0, 0x800000000000L);
      case 110:
         return jjMoveStringLiteralDfa12_5(active0, 0x2000000000000L);
      case 111:
         return jjMoveStringLiteralDfa12_5(active0, 0x5000000000000L);
      case 112:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_5(11, 63, 52);
         break;
      default :
         break;
   }
   return jjStartNfa_5(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa13_5(active0, 0x1000000000000L);
      case 105:
         return jjMoveStringLiteralDfa13_5(active0, 0x800000000000L);
      case 110:
         return jjMoveStringLiteralDfa13_5(active0, 0x6000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa14_5(active0, 0x2000000000000L);
      case 102:
         return jjMoveStringLiteralDfa14_5(active0, 0x800000000000L);
      case 105:
         return jjMoveStringLiteralDfa14_5(active0, 0x1000000000000L);
      case 110:
         return jjMoveStringLiteralDfa14_5(active0, 0x4000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa15_5(active0, 0x2000000000000L);
      case 101:
         return jjMoveStringLiteralDfa15_5(active0, 0x4000000000000L);
      case 102:
         return jjMoveStringLiteralDfa15_5(active0, 0x1000000000000L);
      case 121:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(14, 47);
         break;
      default :
         break;
   }
   return jjStartNfa_5(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa16_5(active0, 0x4000000000000L);
      case 116:
         return jjMoveStringLiteralDfa16_5(active0, 0x2000000000000L);
      case 121:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(15, 48);
         break;
      default :
         break;
   }
   return jjStartNfa_5(14, active0, 0L);
}
private int jjMoveStringLiteralDfa16_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(14, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(15, active0, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa17_5(active0, 0x2000000000000L);
      case 116:
         return jjMoveStringLiteralDfa17_5(active0, 0x4000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(15, active0, 0L);
}
private int jjMoveStringLiteralDfa17_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(15, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(16, active0, 0L);
      return 17;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa18_5(active0, 0x4000000000000L);
      case 111:
         return jjMoveStringLiteralDfa18_5(active0, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(16, active0, 0L);
}
private int jjMoveStringLiteralDfa18_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(16, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(17, active0, 0L);
      return 18;
   }
   switch(curChar)
   {
      case 110:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(18, 49);
         break;
      case 111:
         return jjMoveStringLiteralDfa19_5(active0, 0x4000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(17, active0, 0L);
}
private int jjMoveStringLiteralDfa19_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(17, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(18, active0, 0L);
      return 19;
   }
   switch(curChar)
   {
      case 110:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(19, 50);
         break;
      default :
         break;
   }
   return jjStartNfa_5(18, active0, 0L);
}
private int jjStartNfaWithStates_5(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_5(state, pos + 1);
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 129;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(7, 8); }
                  break;
               case 10:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(9, 10); }
                  break;
               case 22:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(11, 12); }
                  break;
               case 35:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(13, 14); }
                  break;
               case 52:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(15, 16); }
                  break;
               case 68:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(17, 18); }
                  break;
               case 77:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(19, 20); }
                  break;
               case 87:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(21, 22); }
                  break;
               case 101:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(23, 24); }
                  break;
               case 115:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(25, 26); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (curChar == 99)
                     { jjAddStates(27, 31); }
                  else if (curChar == 114)
                     { jjAddStates(32, 35); }
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 20:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 64;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 49;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 32;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 48;
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 31;
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 0:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if (curChar == 108 && kind > 60)
                     kind = 60;
                  break;
               case 3:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 6:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 8:
                  if (curChar == 114)
                     { jjAddStates(32, 35); }
                  break;
               case 9:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 11:
                  if (curChar == 101 && kind > 52)
                     kind = 52;
                  break;
               case 12:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 16:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 21:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (curChar == 116 && kind > 53)
                     kind = 53;
                  break;
               case 24:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 29:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 36:
                  if (curChar == 101 && kind > 54)
                     kind = 54;
                  break;
               case 37:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 46:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 53:
                  if (curChar == 108 && kind > 62)
                     kind = 62;
                  break;
               case 54:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 57:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 99)
                     { jjAddStates(27, 31); }
                  break;
               case 67:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 69:
                  if (curChar == 101 && kind > 55)
                     kind = 55;
                  break;
               case 70:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 74:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 78:
                  if (curChar == 116 && kind > 56)
                     kind = 56;
                  break;
               case 79:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 84:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 88:
                  if (curChar == 101 && kind > 57)
                     kind = 57;
                  break;
               case 89:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 98:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if (curChar == 101 && kind > 58)
                     kind = 58;
                  break;
               case 103:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 106:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 116:
                  if (curChar == 121 && kind > 59)
                     kind = 59;
                  break;
               case 117:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 121:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 129 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  kind = 33;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  kind = 33;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 17)
                        kind = 17;
                     { jjCheckNAdd(5); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 1:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 2:
                  if (curChar == 34)
                     { jjCheckNAddStates(4, 6); }
                  break;
               case 4:
                  if (curChar == 34 && kind > 16)
                     kind = 16;
                  break;
               case 5:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAdd(5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  { jjAddStates(4, 6); }
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  { jjCheckNAdd(5); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(4, 6); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   1, 2, 7, 8, 1, 3, 4, 1, 4, 10, 14, 22, 27, 35, 44, 52, 
   55, 68, 72, 77, 82, 87, 96, 101, 104, 115, 119, 75, 85, 99, 113, 128, 
   20, 33, 50, 65, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\144\145\163\143\162\151\160\164\151\157\156", 
"\150\151\144\144\145\156", "\41\150\151\144\144\145\156", 
"\160\162\145\166\145\156\164\144\165\160\154\151\143\141\164\145\163", "\41\160\162\145\166\145\156\164\144\165\160\154\151\143\141\164\145\163", 
"\141\164\164\162\151\142\165\164\145", "\162\165\154\145", null, null, null, null, null, null, null, null, 
"\153\151\156\144", null, null, null, null, "\142\141\163\151\143", 
"\143\157\155\160\157\163\151\164\151\157\156\141\154", "\164\162\151\147\147\145\162", "\151\156\160\165\164", null, null, null, null, 
null, null, null, null, null, "\141\143\164\151\157\156", "\143\150\145\143\153", 
"\157\166\145\162\162\151\144\145", null, null, null, null, null, null, 
"\160\162\157\160\141\147\141\164\145\155\157\144\151\146\171", "\41\160\162\157\160\141\147\141\164\145\155\157\144\151\146\171", 
"\160\162\157\160\141\147\141\164\145\143\157\156\156\145\143\164\151\157\156", 
"\41\160\162\157\160\141\147\141\164\145\143\157\156\156\145\143\164\151\157\156", "\155\145\141\156\151\156\147", null, null, null, null, null, null, null, null, 
null, "\164\171\160\145", null, "\162\145\154\141\164\151\157\156\163\150\151\160", 
"\175", null, null, null, null, null, null, null, null, 
"\160\162\157\160\145\162\164\171", "\164\157", "\166\141\154\165\145", null, null, null, null, null, null, null, 
null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
     case 7:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_7();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public RelationshipDefParserTokenManager_mxJPO(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public RelationshipDefParserTokenManager_mxJPO (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 129; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( SimpleCharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 8 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "STRING_EXPECTED",
   "KIND_EXPECTED",
   "TRIGEVENT_EXPECTED",
   "TRIGKIND_EXPECTED",
   "FROMTO_EXPECTED",
   "FROMTO_STRING_EXPECTED",
   "ADMINREF_EXPECTED",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, 0, 0, -1, -1, 2, -1, -1, -1, -1, 
   0, 0, 3, 1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 1, 1, 1, 5, 5, -1, -1, -1, -1, -1, -1, -1, 
   -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, 6, 0, -1, -1, -1, -1, 5, 5, -1, -1, 1, 7, 
   1, -1, -1, -1, -1, 1, 1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffff87c21e130fe1L, 0x30e61L, 
};
static final long[] jjtoSkip = {
   0x783de1e0f01eL, 0xf01eL, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[129];
    private final int[] jjstateSet = new int[2 * 129];

    
    protected int curChar;
}
