/* DimensionParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. DimensionParserTokenManager.java */
package org.mxupdate.update.datamodel;
import org.mxupdate.update.util.AbstractParser_mxJPO.SimpleCharStream;
import org.mxupdate.update.util.AbstractParser_mxJPO.Token;
import org.mxupdate.update.util.AbstractParser_mxJPO.TokenMgrError;

/** Token Manager. */
@SuppressWarnings("unused")class DimensionParserTokenManager_mxJPO implements DimensionParserConstants_mxJPO {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(final java.io.PrintStream ds) { this.debugStream = ds; }
private final int jjStopStringLiteralDfa_7(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_7(final int pos, final long active0){
   return this.jjMoveNfa_7(this.jjStopStringLiteralDfa_7(pos, active0), pos + 1);
}
private int jjStopAtPos(final int pos, final int kind)
{
   this.jjmatchedKind = kind;
   this.jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_7(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_7(0, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_7(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 38)
                        kind = 38;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 37)
                     kind = 37;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_8(final int pos, final long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x10400000L) != 0L)
            return 14;
         return -1;
      case 1:
         if ((active0 & 0x10400000L) != 0L)
            return 13;
         return -1;
      case 2:
         if ((active0 & 0x400000L) != 0L)
            return 12;
         return -1;
      case 3:
         if ((active0 & 0x400000L) != 0L)
            return 11;
         return -1;
      case 4:
         if ((active0 & 0x400000L) != 0L)
            return 10;
         return -1;
      case 5:
         if ((active0 & 0x400000L) != 0L)
            return 4;
         return -1;
      case 6:
         if ((active0 & 0x400000L) != 0L)
            return 54;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_8(final int pos, final long active0){
   return this.jjMoveNfa_8(this.jjStopStringLiteralDfa_8(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_8(){
   switch(this.curChar)
   {
      case 33:
         return this.jjMoveStringLiteralDfa1_8(0x2000000L);
      case 100:
         return this.jjMoveStringLiteralDfa1_8(0x10400000L);
      case 108:
         return this.jjMoveStringLiteralDfa1_8(0x20000000L);
      case 109:
         return this.jjMoveStringLiteralDfa1_8(0x40000000L);
      case 111:
         return this.jjMoveStringLiteralDfa1_8(0x80000000L);
      case 112:
         return this.jjMoveStringLiteralDfa1_8(0x200000000L);
      case 115:
         return this.jjMoveStringLiteralDfa1_8(0x1100000000L);
      case 116:
         return this.jjMoveStringLiteralDfa1_8(0x800000000L);
      case 118:
         return this.jjMoveStringLiteralDfa1_8(0x400000000L);
      case 123:
         return this.jjStopAtPos(0, 20);
      case 125:
         return this.jjStopAtPos(0, 21);
      default :
         return this.jjMoveNfa_8(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_8(final long active0){
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(0, active0);
      return 1;
   }
   switch(this.curChar)
   {
      case 97:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x420000000L);
      case 100:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x2000000L);
      case 101:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x110400000L);
      case 102:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x80000000L);
      case 111:
         if ((active0 & 0x800000000L) != 0L)
            return this.jjStopAtPos(1, 35);
         break;
      case 114:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x200000000L);
      case 117:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x40000000L);
      case 121:
         return this.jjMoveStringLiteralDfa2_8(active0, 0x1000000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(0, active0);
}
private int jjMoveStringLiteralDfa2_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(0, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(1, active0);
      return 2;
   }
   switch(this.curChar)
   {
      case 98:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x20000000L);
      case 101:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x2000000L);
      case 102:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x80400000L);
      case 108:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x440000000L);
      case 111:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x200000000L);
      case 115:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x1010000000L);
      case 116:
         return this.jjMoveStringLiteralDfa3_8(active0, 0x100000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(1, active0);
}
private int jjMoveStringLiteralDfa3_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(1, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(2, active0);
      return 3;
   }
   switch(this.curChar)
   {
      case 97:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x400000L);
      case 99:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x10000000L);
      case 101:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x20000000L);
      case 102:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x2000000L);
      case 112:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x200000000L);
      case 115:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x80000000L);
      case 116:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x1140000000L);
      case 117:
         return this.jjMoveStringLiteralDfa4_8(active0, 0x400000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(2, active0);
}
private int jjMoveStringLiteralDfa4_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(2, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(3, active0);
      return 4;
   }
   switch(this.curChar)
   {
      case 97:
         return this.jjMoveStringLiteralDfa5_8(active0, 0x2000000L);
      case 101:
         if ((active0 & 0x400000000L) != 0L)
            return this.jjStopAtPos(4, 34);
         return this.jjMoveStringLiteralDfa5_8(active0, 0x1280000000L);
      case 105:
         return this.jjMoveStringLiteralDfa5_8(active0, 0x140000000L);
      case 108:
         if ((active0 & 0x20000000L) != 0L)
            return this.jjStopAtPos(4, 29);
         break;
      case 114:
         return this.jjMoveStringLiteralDfa5_8(active0, 0x10000000L);
      case 117:
         return this.jjMoveStringLiteralDfa5_8(active0, 0x400000L);
      default :
         break;
   }
   return this.jjStartNfa_8(3, active0);
}
private int jjMoveStringLiteralDfa5_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(3, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(4, active0);
      return 5;
   }
   switch(this.curChar)
   {
      case 105:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x10000000L);
      case 108:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x400000L);
      case 109:
         if ((active0 & 0x1000000000L) != 0L)
            return this.jjStopAtPos(5, 36);
         break;
      case 110:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x100000000L);
      case 112:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x40000000L);
      case 114:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x200000000L);
      case 116:
         if ((active0 & 0x80000000L) != 0L)
            return this.jjStopAtPos(5, 31);
         break;
      case 117:
         return this.jjMoveStringLiteralDfa6_8(active0, 0x2000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(4, active0);
}
private int jjMoveStringLiteralDfa6_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(4, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(5, active0);
      return 6;
   }
   switch(this.curChar)
   {
      case 103:
         if ((active0 & 0x100000000L) != 0L)
            return this.jjStopAtPos(6, 32);
         break;
      case 108:
         return this.jjMoveStringLiteralDfa7_8(active0, 0x42000000L);
      case 112:
         return this.jjMoveStringLiteralDfa7_8(active0, 0x10000000L);
      case 116:
         if ((active0 & 0x400000L) != 0L)
            return this.jjStartNfaWithStates_8(6, 22, 54);
         return this.jjMoveStringLiteralDfa7_8(active0, 0x200000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(5, active0);
}
private int jjMoveStringLiteralDfa7_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(5, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(6, active0);
      return 7;
   }
   switch(this.curChar)
   {
      case 105:
         return this.jjMoveStringLiteralDfa8_8(active0, 0x40000000L);
      case 116:
         if ((active0 & 0x2000000L) != 0L)
            return this.jjStopAtPos(7, 25);
         return this.jjMoveStringLiteralDfa8_8(active0, 0x10000000L);
      case 121:
         if ((active0 & 0x200000000L) != 0L)
            return this.jjStopAtPos(7, 33);
         break;
      default :
         break;
   }
   return this.jjStartNfa_8(6, active0);
}
private int jjMoveStringLiteralDfa8_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(6, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(7, active0);
      return 8;
   }
   switch(this.curChar)
   {
      case 101:
         return this.jjMoveStringLiteralDfa9_8(active0, 0x40000000L);
      case 105:
         return this.jjMoveStringLiteralDfa9_8(active0, 0x10000000L);
      default :
         break;
   }
   return this.jjStartNfa_8(7, active0);
}
private int jjMoveStringLiteralDfa9_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(7, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(8, active0);
      return 9;
   }
   switch(this.curChar)
   {
      case 111:
         return this.jjMoveStringLiteralDfa10_8(active0, 0x10000000L);
      case 114:
         if ((active0 & 0x40000000L) != 0L)
            return this.jjStopAtPos(9, 30);
         break;
      default :
         break;
   }
   return this.jjStartNfa_8(8, active0);
}
private int jjMoveStringLiteralDfa10_8(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_8(8, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_8(9, active0);
      return 10;
   }
   switch(this.curChar)
   {
      case 110:
         if ((active0 & 0x10000000L) != 0L)
            return this.jjStopAtPos(10, 28);
         break;
      default :
         break;
   }
   return this.jjStartNfa_8(9, active0);
}
private int jjStartNfaWithStates_8(final int pos, final int kind, final int state)
{
   this.jjmatchedKind = kind;
   this.jjmatchedPos = pos;
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) { return pos + 1; }
   return this.jjMoveNfa_8(state, pos + 1);
}
private int jjMoveNfa_8(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 54;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 54:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(41, 42); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(29, 30); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(16, 17); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(5, 6); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 5:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(5, 6); }
                  break;
               case 16:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(16, 17); }
                  break;
               case 17:
                  if (this.curChar == 34)
                     this.jjstateSet[this.jjnewStateCnt++] = 18;
                  break;
               case 22:
                  if (this.curChar == 34 && kind > 24)
                     kind = 24;
                  break;
               case 29:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(29, 30); }
                  break;
               case 41:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(41, 42); }
                  break;
               case 42:
                  if (this.curChar == 34)
                     this.jjstateSet[this.jjnewStateCnt++] = 43;
                  break;
               case 48:
                  if (this.curChar == 34 && kind > 27)
                     kind = 27;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 10:
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 40;
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 28;
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 15;
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 4;
                  break;
               case 13:
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 51;
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 37;
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 25;
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 52;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 38;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 26;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 13;
                  break;
               case 11:
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 49;
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 35;
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 23;
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 50;
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 36;
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 24;
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 11;
                  break;
               case 0:
                  if (this.curChar == 100)
                     { this.jjAddStates(9, 12); }
                  break;
               case 4:
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 41;
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 29;
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 16;
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 5;
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 6:
                  if ((0x10000000100000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x4000000040000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if ((0x20000000200000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x2000000020L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 15:
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x10000000100000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x4000000040000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x20000000200000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x2000000020L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 15;
                  break;
               case 24:
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 29;
                  break;
               case 30:
                  if ((0x4000000040L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x200000002L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 32;
                  break;
               case 32:
                  if ((0x100000001000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x8000000080000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if ((0x2000000020L & l) != 0L && kind > 26)
                     kind = 26;
                  break;
               case 35:
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 28;
                  break;
               case 36:
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (this.curChar == 116)
                     this.jjstateSet[this.jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x4000000040L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x200000002L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x100000001000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x8000000080000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 47;
                  break;
               case 47:
                  if ((0x2000000020L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 48;
                  break;
               case 49:
                  if (this.curChar == 108)
                     this.jjstateSet[this.jjnewStateCnt++] = 40;
                  break;
               case 50:
                  if (this.curChar == 117)
                     this.jjstateSet[this.jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (this.curChar == 97)
                     this.jjstateSet[this.jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (this.curChar == 102)
                     this.jjstateSet[this.jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 52;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 54 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_9(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_9(final int pos, final long active0){
   return this.jjMoveNfa_9(this.jjStopStringLiteralDfa_9(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_9(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_9(0, 0);
   }
}
private int jjMoveNfa_9(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 18)
                     kind = 18;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_6(final int pos, final long active0){
   return this.jjMoveNfa_6(this.jjStopStringLiteralDfa_6(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_6(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_6(0, 0);
   }
}
private int jjMoveNfa_6(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 39)
                     kind = 39;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_12(final int pos, final long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x80L) != 0L)
            return 13;
         return -1;
      case 1:
         if ((active0 & 0x80L) != 0L)
            return 12;
         return -1;
      case 2:
         if ((active0 & 0x80L) != 0L)
            return 11;
         return -1;
      case 3:
         if ((active0 & 0x80L) != 0L)
            return 10;
         return -1;
      case 4:
         if ((active0 & 0x80L) != 0L)
            return 4;
         return -1;
      case 5:
         if ((active0 & 0x80L) != 0L)
            return 50;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_12(final int pos, final long active0){
   return this.jjMoveNfa_12(this.jjStopStringLiteralDfa_12(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_12(){
   switch(this.curChar)
   {
      case 33:
         return this.jjMoveStringLiteralDfa1_12(0x400L);
      case 100:
         return this.jjMoveStringLiteralDfa1_12(0x40L);
      case 104:
         return this.jjMoveStringLiteralDfa1_12(0x80L);
      case 112:
         return this.jjMoveStringLiteralDfa1_12(0x1000000000000L);
      case 115:
         return this.jjMoveStringLiteralDfa1_12(0x20L);
      case 116:
         return this.jjMoveStringLiteralDfa1_12(0x4000000000000L);
      case 117:
         return this.jjMoveStringLiteralDfa1_12(0x20000L);
      case 118:
         return this.jjMoveStringLiteralDfa1_12(0x2000000000000L);
      default :
         return this.jjMoveNfa_12(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_12(final long active0){
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(0, active0);
      return 1;
   }
   switch(this.curChar)
   {
      case 97:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x2000000000000L);
      case 101:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x40L);
      case 104:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x400L);
      case 105:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x80L);
      case 110:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x20000L);
      case 111:
         if ((active0 & 0x4000000000000L) != 0L)
            return this.jjStopAtPos(1, 50);
         break;
      case 114:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x1000000000000L);
      case 121:
         return this.jjMoveStringLiteralDfa2_12(active0, 0x20L);
      default :
         break;
   }
   return this.jjStartNfa_12(0, active0);
}
private int jjMoveStringLiteralDfa2_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(0, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(1, active0);
      return 2;
   }
   switch(this.curChar)
   {
      case 100:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x80L);
      case 105:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x20400L);
      case 108:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x2000000000000L);
      case 109:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x20L);
      case 111:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x1000000000000L);
      case 115:
         return this.jjMoveStringLiteralDfa3_12(active0, 0x40L);
      default :
         break;
   }
   return this.jjStartNfa_12(1, active0);
}
private int jjMoveStringLiteralDfa3_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(1, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(2, active0);
      return 3;
   }
   switch(this.curChar)
   {
      case 98:
         return this.jjMoveStringLiteralDfa4_12(active0, 0x20L);
      case 99:
         return this.jjMoveStringLiteralDfa4_12(active0, 0x40L);
      case 100:
         return this.jjMoveStringLiteralDfa4_12(active0, 0x480L);
      case 112:
         return this.jjMoveStringLiteralDfa4_12(active0, 0x1000000000000L);
      case 116:
         if ((active0 & 0x20000L) != 0L)
            return this.jjStopAtPos(3, 17);
         break;
      case 117:
         return this.jjMoveStringLiteralDfa4_12(active0, 0x2000000000000L);
      default :
         break;
   }
   return this.jjStartNfa_12(2, active0);
}
private int jjMoveStringLiteralDfa4_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(2, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(3, active0);
      return 4;
   }
   switch(this.curChar)
   {
      case 100:
         return this.jjMoveStringLiteralDfa5_12(active0, 0x400L);
      case 101:
         if ((active0 & 0x2000000000000L) != 0L)
            return this.jjStopAtPos(4, 49);
         return this.jjMoveStringLiteralDfa5_12(active0, 0x1000000000080L);
      case 111:
         return this.jjMoveStringLiteralDfa5_12(active0, 0x20L);
      case 114:
         return this.jjMoveStringLiteralDfa5_12(active0, 0x40L);
      default :
         break;
   }
   return this.jjStartNfa_12(3, active0);
}
private int jjMoveStringLiteralDfa5_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(3, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(4, active0);
      return 5;
   }
   switch(this.curChar)
   {
      case 101:
         return this.jjMoveStringLiteralDfa6_12(active0, 0x400L);
      case 105:
         return this.jjMoveStringLiteralDfa6_12(active0, 0x40L);
      case 108:
         return this.jjMoveStringLiteralDfa6_12(active0, 0x20L);
      case 110:
         if ((active0 & 0x80L) != 0L)
            return this.jjStartNfaWithStates_12(5, 7, 50);
         break;
      case 114:
         return this.jjMoveStringLiteralDfa6_12(active0, 0x1000000000000L);
      default :
         break;
   }
   return this.jjStartNfa_12(4, active0);
}
private int jjMoveStringLiteralDfa6_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(4, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(5, active0);
      return 6;
   }
   switch(this.curChar)
   {
      case 105:
         return this.jjMoveStringLiteralDfa7_12(active0, 0x20L);
      case 110:
         if ((active0 & 0x400L) != 0L)
            return this.jjStopAtPos(6, 10);
         break;
      case 112:
         return this.jjMoveStringLiteralDfa7_12(active0, 0x40L);
      case 116:
         return this.jjMoveStringLiteralDfa7_12(active0, 0x1000000000000L);
      default :
         break;
   }
   return this.jjStartNfa_12(5, active0);
}
private int jjMoveStringLiteralDfa7_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(5, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(6, active0);
      return 7;
   }
   switch(this.curChar)
   {
      case 99:
         return this.jjMoveStringLiteralDfa8_12(active0, 0x20L);
      case 116:
         return this.jjMoveStringLiteralDfa8_12(active0, 0x40L);
      case 121:
         if ((active0 & 0x1000000000000L) != 0L)
            return this.jjStopAtPos(7, 48);
         break;
      default :
         break;
   }
   return this.jjStartNfa_12(6, active0);
}
private int jjMoveStringLiteralDfa8_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(6, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(7, active0);
      return 8;
   }
   switch(this.curChar)
   {
      case 105:
         return this.jjMoveStringLiteralDfa9_12(active0, 0x40L);
      case 110:
         return this.jjMoveStringLiteralDfa9_12(active0, 0x20L);
      default :
         break;
   }
   return this.jjStartNfa_12(7, active0);
}
private int jjMoveStringLiteralDfa9_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(7, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(8, active0);
      return 9;
   }
   switch(this.curChar)
   {
      case 97:
         return this.jjMoveStringLiteralDfa10_12(active0, 0x20L);
      case 111:
         return this.jjMoveStringLiteralDfa10_12(active0, 0x40L);
      default :
         break;
   }
   return this.jjStartNfa_12(8, active0);
}
private int jjMoveStringLiteralDfa10_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(8, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(9, active0);
      return 10;
   }
   switch(this.curChar)
   {
      case 109:
         return this.jjMoveStringLiteralDfa11_12(active0, 0x20L);
      case 110:
         if ((active0 & 0x40L) != 0L)
            return this.jjStopAtPos(10, 6);
         break;
      default :
         break;
   }
   return this.jjStartNfa_12(9, active0);
}
private int jjMoveStringLiteralDfa11_12(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_12(9, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_12(10, active0);
      return 11;
   }
   switch(this.curChar)
   {
      case 101:
         if ((active0 & 0x20L) != 0L)
            return this.jjStopAtPos(11, 5);
         break;
      default :
         break;
   }
   return this.jjStartNfa_12(10, active0);
}
private int jjStartNfaWithStates_12(final int pos, final int kind, final int state)
{
   this.jjmatchedKind = kind;
   this.jjmatchedPos = pos;
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) { return pos + 1; }
   return this.jjMoveNfa_12(state, pos + 1);
}
private int jjMoveNfa_12(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 50;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 50:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(38, 39); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(27, 28); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(15, 16); }
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(5, 6); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 5:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(5, 6); }
                  break;
               case 15:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(15, 16); }
                  break;
               case 16:
                  if (this.curChar == 34)
                     this.jjstateSet[this.jjnewStateCnt++] = 17;
                  break;
               case 21:
                  if (this.curChar == 34 && kind > 9)
                     kind = 9;
                  break;
               case 27:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(27, 28); }
                  break;
               case 38:
                  if ((0x100002600L & l) != 0L)
                     { this.jjCheckNAddTwoStates(38, 39); }
                  break;
               case 39:
                  if (this.curChar == 34)
                     this.jjstateSet[this.jjnewStateCnt++] = 40;
                  break;
               case 45:
                  if (this.curChar == 34 && kind > 12)
                     kind = 12;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if (this.curChar == 104)
                     { this.jjAddStates(13, 16); }
                  break;
               case 13:
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 48;
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 35;
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 24;
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 12;
                  break;
               case 10:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 37;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 26;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 14;
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 4;
                  break;
               case 11:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 46;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 33;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 22;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 47;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 34;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 23;
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 11;
                  break;
               case 4:
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 38;
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 27;
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 15;
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 5;
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 6:
                  if ((0x10000000100000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x4000000040000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if ((0x20000000200000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x2000000020L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 14:
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if ((0x10000000100000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x4000000040000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x20000000200000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x2000000020L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 14;
                  break;
               case 23:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 27;
                  break;
               case 28:
                  if ((0x4000000040L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x200000002L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0x100000001000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x8000000080000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 32;
                  break;
               case 32:
                  if ((0x2000000020L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 33:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 26;
                  break;
               case 34:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (this.curChar == 110)
                     this.jjstateSet[this.jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x4000000040L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x200000002L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x100000001000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x8000000080000L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x2000000020L & l) != 0L)
                     this.jjstateSet[this.jjnewStateCnt++] = 45;
                  break;
               case 46:
                  if (this.curChar == 101)
                     this.jjstateSet[this.jjnewStateCnt++] = 37;
                  break;
               case 47:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (this.curChar == 100)
                     this.jjstateSet[this.jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (this.curChar == 105)
                     this.jjstateSet[this.jjnewStateCnt++] = 48;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 50 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_11(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_11(final int pos, final long active0){
   return this.jjMoveNfa_11(this.jjStopStringLiteralDfa_11(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_11(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_11(0, 0);
   }
}
private int jjMoveNfa_11(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 13;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 14)
                        kind = 14;
                     { this.jjCheckNAdd(12); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000400L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 13)
                     kind = 13;
                  break;
               case 12:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  { this.jjCheckNAdd(12); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 12:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  { this.jjCheckNAdd(12); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(17, 21); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 11:
                  if (this.curChar == 110)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 12:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  { this.jjCheckNAdd(12); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 13 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(final int pos, final long active0){
   return this.jjMoveNfa_1(this.jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_1(0, 0);
   }
}
private int jjMoveNfa_1(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 4;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 51)
                        kind = 51;
                     { this.jjCheckNAdd(3); }
                  }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  { this.jjCheckNAdd(3); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 3:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  { this.jjCheckNAdd(3); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 3:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  { this.jjCheckNAdd(3); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 4 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(final int pos, final long active0){
   return this.jjMoveNfa_2(this.jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_2(0, 0);
   }
}
private int jjMoveNfa_2(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 46)
                     kind = 46;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_10(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_10(final int pos, final long active0){
   return this.jjMoveNfa_10(this.jjStopStringLiteralDfa_10(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_10(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_10(0, 0);
   }
}
private int jjMoveNfa_10(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 16)
                        kind = 16;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 15)
                     kind = 15;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(final int pos, final long active0){
   return this.jjMoveNfa_4(this.jjStopStringLiteralDfa_4(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_4(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_4(0, 0);
   }
}
private int jjMoveNfa_4(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 43)
                        kind = 43;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 42)
                     kind = 42;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(final int pos, final long active0){
   return this.jjMoveNfa_3(this.jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(this.curChar)
   {
      case 116:
         return this.jjMoveStringLiteralDfa1_3(0x100000000000L);
      case 117:
         return this.jjMoveStringLiteralDfa1_3(0x200000000000L);
      default :
         return this.jjMoveNfa_3(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(final long active0){
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_3(0, active0);
      return 1;
   }
   switch(this.curChar)
   {
      case 110:
         return this.jjMoveStringLiteralDfa2_3(active0, 0x200000000000L);
      case 111:
         if ((active0 & 0x100000000000L) != 0L)
            return this.jjStopAtPos(1, 44);
         break;
      default :
         break;
   }
   return this.jjStartNfa_3(0, active0);
}
private int jjMoveStringLiteralDfa2_3(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_3(0, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_3(1, active0);
      return 2;
   }
   switch(this.curChar)
   {
      case 105:
         return this.jjMoveStringLiteralDfa3_3(active0, 0x200000000000L);
      default :
         break;
   }
   return this.jjStartNfa_3(1, active0);
}
private int jjMoveStringLiteralDfa3_3(final long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return this.jjStartNfa_3(1, old0);
   try { this.curChar = this.input_stream.readChar(); }
   catch(final java.io.IOException e) {
      this.jjStopStringLiteralDfa_3(2, active0);
      return 3;
   }
   switch(this.curChar)
   {
      case 116:
         if ((active0 & 0x200000000000L) != 0L)
            return this.jjStopAtPos(3, 45);
         break;
      default :
         break;
   }
   return this.jjStartNfa_3(2, active0);
}
private int jjMoveNfa_3(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 3;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 3 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(final int pos, final long active0){
   return this.jjMoveNfa_0(this.jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_0(0, 0);
   }
}
private int jjMoveNfa_0(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 12;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     { this.jjCheckNAdd(11); }
                  }
                  else if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (this.curChar == 34)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 5:
                  if (this.curChar == 34 && kind > 53)
                     kind = 53;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  { this.jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 6:
                  if (this.curChar == 92)
                     { this.jjAddStates(5, 8); }
                  break;
               case 8:
                  if (this.curChar == 92)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 9:
                  if (this.curChar == 123)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if (this.curChar == 125)
                     { this.jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  { this.jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 12 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(final int pos, final long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_5(final int pos, final long active0){
   return this.jjMoveNfa_5(this.jjStopStringLiteralDfa_5(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_5(){
   switch(this.curChar)
   {
      default :
         return this.jjMoveNfa_5(0, 0);
   }
}
private int jjMoveNfa_5(final int startState, int curPos)
{
   int startsAt = 0;
   this.jjnewStateCnt = 10;
   int i = 1;
   this.jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++this.jjround == 0x7fffffff)
         this.ReInitRounds();
      if (this.curChar < 64)
      {
         final long l = 1L << this.curChar;
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     { this.jjCheckNAddStates(22, 24); }
                  }
                  else if (this.curChar == 46)
                  {
                     if (kind > 41)
                        kind = 41;
                     { this.jjCheckNAddTwoStates(6, 7); }
                  }
                  else if (this.curChar == 45)
                  {
                     if (kind > 41)
                        kind = 41;
                     { this.jjCheckNAddStates(22, 24); }
                  }
                  else if (this.curChar == 35)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { this.jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (this.curChar == 10)
                     kind = 4;
                  break;
               case 3:
                  if (this.curChar != 45)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAddStates(22, 24); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAddStates(22, 24); }
                  break;
               case 5:
                  if (this.curChar != 46)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAddTwoStates(6, 7); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAddTwoStates(6, 7); }
                  break;
               case 8:
                  if (this.curChar != 45)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAdd(9); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjCheckNAdd(9); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (this.curChar < 128)
      {
         final long l = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 0:
               case 7:
                  if (this.curChar != 69)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { this.jjAddStates(25, 26); }
                  break;
               case 1:
                  { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         final int i2 = (this.curChar & 0xff) >> 6;
         final long l2 = 1L << (this.curChar & 077);
         do
         {
            switch(this.jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { this.jjAddStates(3, 4); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         this.jjmatchedKind = kind;
         this.jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = this.jjnewStateCnt) == (startsAt = 10 - (this.jjnewStateCnt = startsAt)))
         return curPos;
      try { this.curChar = this.input_stream.readChar(); }
      catch(final java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   4, 5, 6, 1, 2, 7, 8, 9, 10, 14, 27, 39, 53, 13, 25, 36,
   49, 7, 8, 9, 10, 11, 4, 5, 7, 8, 9,
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null,
"\163\171\155\142\157\154\151\143\156\141\155\145", "\144\145\163\143\162\151\160\164\151\157\156", "\150\151\144\144\145\156",
null, null, "\41\150\151\144\144\145\156", null, null, null, null, null, null,
"\165\156\151\164", null, null, "\173", "\175", "\144\145\146\141\165\154\164", null, null,
"\41\144\145\146\141\165\154\164", null, null, "\144\145\163\143\162\151\160\164\151\157\156",
"\154\141\142\145\154", "\155\165\154\164\151\160\154\151\145\162", "\157\146\146\163\145\164",
"\163\145\164\164\151\156\147", "\160\162\157\160\145\162\164\171", "\166\141\154\165\145", "\164\157",
"\163\171\163\164\145\155", null, null, null, null, null, null, null, "\164\157", "\165\156\151\164", null,
null, "\160\162\157\160\145\162\164\171", "\166\141\154\165\145", "\164\157", null,
null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (this.jjmatchedPos < 0)
   {
      if (this.image == null)
         curTokenImage = "";
      else
         curTokenImage = this.image.toString();
      beginLine = endLine = this.input_stream.getEndLine();
      beginColumn = endColumn = this.input_stream.getEndColumn();
   }
   else
   {
      final String im = jjstrLiteralImages[this.jjmatchedKind];
      curTokenImage = (im == null) ? this.input_stream.GetImage() : im;
      beginLine = this.input_stream.getBeginLine();
      beginColumn = this.input_stream.getBeginColumn();
      endLine = this.input_stream.getEndLine();
      endColumn = this.input_stream.getEndColumn();
   }
   t = Token.newToken(this.jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 12;
int defaultLexState = 12;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken()
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      this.curChar = this.input_stream.BeginToken();
   }
   catch(final Exception e)
   {
      this.jjmatchedKind = 0;
      this.jjmatchedPos = -1;
      matchedToken = this.jjFillToken();
      return matchedToken;
   }
   this.image = this.jjimage;
   this.image.setLength(0);
   this.jjimageLen = 0;

   switch(this.curLexState)
   {
     case 0:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 41;
       this.jjmatchedPos = -1;
       curPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_6();
       break;
     case 7:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_7();
       break;
     case 8:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_8();
       break;
     case 9:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_9();
       break;
     case 10:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_10();
       break;
     case 11:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_11();
       break;
     case 12:
       try { this.input_stream.backup(0);
          while (this.curChar <= 32 && (0x100000600L & (1L << this.curChar)) != 0L)
             this.curChar = this.input_stream.BeginToken();
       }
       catch (final java.io.IOException e1) { continue EOFLoop; }
       this.jjmatchedKind = 0x7fffffff;
       this.jjmatchedPos = 0;
       curPos = this.jjMoveStringLiteralDfa0_12();
       break;
   }
     if (this.jjmatchedKind != 0x7fffffff)
     {
        if (this.jjmatchedPos + 1 < curPos)
           this.input_stream.backup(curPos - this.jjmatchedPos - 1);
        if ((jjtoToken[this.jjmatchedKind >> 6] & (1L << (this.jjmatchedKind & 077))) != 0L)
        {
           matchedToken = this.jjFillToken();
           this.TokenLexicalActions(matchedToken);
       if (jjnewLexState[this.jjmatchedKind] != -1)
         this.curLexState = jjnewLexState[this.jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[this.jjmatchedKind] != -1)
           this.curLexState = jjnewLexState[this.jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = this.input_stream.getEndLine();
     int error_column = this.input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { this.input_stream.readChar(); this.input_stream.backup(1); }
     catch (final java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : this.input_stream.GetImage();
        if (this.curChar == '\n' || this.curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        this.input_stream.backup(1);
        error_after = curPos <= 1 ? "" : this.input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(final Token matchedToken)
{
   switch(this.jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(final int state)
{
   if (this.jjrounds[state] != this.jjround)
   {
      this.jjstateSet[this.jjnewStateCnt++] = state;
      this.jjrounds[state] = this.jjround;
   }
}
private void jjAddStates(int start, final int end)
{
   do {
      this.jjstateSet[this.jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(final int state1, final int state2)
{
   this.jjCheckNAdd(state1);
   this.jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, final int end)
{
   do {
      this.jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public DimensionParserTokenManager_mxJPO(final SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    this.input_stream = stream;
  }

  /** Constructor. */
  public DimensionParserTokenManager_mxJPO (final SimpleCharStream stream, final int lexState){
    this.ReInit(stream);
    this.SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(final SimpleCharStream stream)
  {

    this.jjmatchedPos = this.jjnewStateCnt = 0;
    this.curLexState = this.defaultLexState;
    this.input_stream = stream;
    this.ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    this.jjround = 0x80000001;
    for (i = 54; i-- > 0;)
      this.jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( final SimpleCharStream stream, final int lexState)
  {

    this.ReInit( stream);
    this.SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(final int lexState)
  {
    if (lexState >= 13 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      this.curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "PROPERTY_STRING_EXPECTED",
   "PROPERTYTO_EXPECTED",
   "UNITDEF_SYSTEMUNIT_EXPECTED",
   "UNITDEF_SYSTEMDEF_EXPECTED",
   "UNITDEF_SYSTEMNAME_EXPECTED",
   "UNITDEF_DOUBLE_EXPECTED",
   "UNITDEF_STRINGSTRING_EXPECTED",
   "UNITDEF_STRING_EXPECTED",
   "UNITDEF_EXPECTED",
   "UNITNAME_EXPECTED",
   "STRING_EXPECTED",
   "MULTILINESTRING_EXPECTED",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 10, 11, -1, -1, -1, -1, -1, -1, 12, 12, 12, 12, 9, 8, 12, -1, 12, -1, -1, -1,
   -1, -1, -1, 7, 7, 5, 5, 6, 7, 7, 6, 4, 8, 8, 7, 7, 8, 3, 3, -1, 2, 8, 8, 0, 0,
   1, 0, -1, 12, 12,
};
static final long[] jjtoToken = {
   0x6fffffffffffe1L,
};
static final long[] jjtoSkip = {
   0x1eL,
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[54];
    private final int[] jjstateSet = new int[2 * 54];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = this.jjimage;
    private int jjimageLen;
    private int lengthOfMatch;

    protected int curChar;
}
