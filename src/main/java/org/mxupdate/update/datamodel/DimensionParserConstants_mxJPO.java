/* Generated By:JavaCC: Do not edit this line. DimensionParserConstants.java */
/*
 *  This file is part of MxUpdate <http://www.mxupdate.org>.
 *
 *  MxUpdate is a deployment tool for a PLM platform to handle
 *  administration objects as single update files (configuration item).
 *
 *  Copyright (C) 2008-2016 The MxUpdate Team - All Rights Reserved
 *
 *  You may use, distribute and modify MxUpdate under the terms of the
 *  MxUpdate license. You should have received a copy of the MxUpdate
 *  license with this file. If not, please write to <info@mxupdate.org>,
 *  or visit <www.mxupdate.org>.
 *
 */

package org.mxupdate.update.datamodel;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface DimensionParserConstants_mxJPO {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PACKAGE = 5;
  /** RegularExpression Id. */
  int UUID = 6;
  /** RegularExpression Id. */
  int SYMBOLICNAME = 7;
  /** RegularExpression Id. */
  int DESCRIPTION = 8;
  /** RegularExpression Id. */
  int HIDDEN_TRUE = 9;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE = 10;
  /** RegularExpression Id. */
  int HIDDEN_TRUE_VIA_VALUE_APOSTROPHE = 11;
  /** RegularExpression Id. */
  int HIDDEN_FALSE = 12;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE = 13;
  /** RegularExpression Id. */
  int HIDDEN_FALSE_VIA_VALUE_APOSTROPHE = 14;
  /** RegularExpression Id. */
  int STRING = 15;
  /** RegularExpression Id. */
  int SINGLE = 16;
  /** RegularExpression Id. */
  int MULTILINESTRING = 17;
  /** RegularExpression Id. */
  int MULTILINESINGLE = 18;
  /** RegularExpression Id. */
  int UNIT = 19;
  /** RegularExpression Id. */
  int UNITNAME_STRING = 20;
  /** RegularExpression Id. */
  int UNITNAME_SINGLE = 21;
  /** RegularExpression Id. */
  int UNITDEF_START = 22;
  /** RegularExpression Id. */
  int UNITDEF_END = 23;
  /** RegularExpression Id. */
  int UNITDEF_UUID = 24;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_TRUE = 25;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_TRUE_VIA_VALUE = 26;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_TRUE_VIA_VALUE_APOSTROPHE = 27;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_FALSE = 28;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_FALSE_VIA_VALUE = 29;
  /** RegularExpression Id. */
  int UNITDEF_DEFAULT_FALSE_VIA_VALUE_APOSTROPHE = 30;
  /** RegularExpression Id. */
  int UNITDEF_DESCRIPTION = 31;
  /** RegularExpression Id. */
  int UNITDEF_LABEL = 32;
  /** RegularExpression Id. */
  int UNITDEF_MULTIPLIER = 33;
  /** RegularExpression Id. */
  int UNITDEF_OFFSET = 34;
  /** RegularExpression Id. */
  int UNITDEF_SETTING = 35;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTY = 36;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTYVAL = 37;
  /** RegularExpression Id. */
  int UNITDEF_PROPERTYTO = 38;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEM = 39;
  /** RegularExpression Id. */
  int UNITDEF_STRING = 40;
  /** RegularExpression Id. */
  int UNITDEF_SINGLE = 41;
  /** RegularExpression Id. */
  int UNITDEF_STRINGSTRING_STRING = 42;
  /** RegularExpression Id. */
  int UNITDEF_STRINGSTRING_SINGLE = 43;
  /** RegularExpression Id. */
  int UNITDEF_DOUBLE_DOUBLE = 44;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMNAME_STRING = 45;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMNAME_SINGLE = 46;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMDEF_TO = 47;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMDEF_UNIT = 48;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMUNIT_STRING = 49;
  /** RegularExpression Id. */
  int UNITDEF_SYSTEMUNIT_SINGLE = 50;
  /** RegularExpression Id. */
  int PROPERTY = 51;
  /** RegularExpression Id. */
  int PROPERTYTO = 52;
  /** RegularExpression Id. */
  int PROPERTYVAL = 53;
  /** RegularExpression Id. */
  int ADMINTYPE_STRING = 54;
  /** RegularExpression Id. */
  int ADMINTYPE_SINGLE = 55;

  /** Lexical state. */
  int ADMINREF_EXPECTED = 0;
  /** Lexical state. */
  int UNITDEF_SYSTEMUNIT_EXPECTED = 1;
  /** Lexical state. */
  int UNITDEF_SYSTEMDEF_EXPECTED = 2;
  /** Lexical state. */
  int UNITDEF_SYSTEMNAME_EXPECTED = 3;
  /** Lexical state. */
  int UNITDEF_DOUBLE_EXPECTED = 4;
  /** Lexical state. */
  int UNITDEF_STRINGSTRING_EXPECTED = 5;
  /** Lexical state. */
  int UNITDEF_STRING_EXPECTED = 6;
  /** Lexical state. */
  int UNITDEF_EXPECTED = 7;
  /** Lexical state. */
  int UNITNAME_EXPECTED = 8;
  /** Lexical state. */
  int MULTILINESTRING_EXPECTED = 9;
  /** Lexical state. */
  int STRING_EXPECTED = 10;
  /** Lexical state. */
  int DEFAULT = 11;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 4>",
    "\"package\"",
    "\"uuid\"",
    "\"symbolicname\"",
    "\"description\"",
    "\"hidden\"",
    "<HIDDEN_TRUE_VIA_VALUE>",
    "<HIDDEN_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!hidden\"",
    "<HIDDEN_FALSE_VIA_VALUE>",
    "<HIDDEN_FALSE_VIA_VALUE_APOSTROPHE>",
    "<STRING>",
    "<SINGLE>",
    "<MULTILINESTRING>",
    "<MULTILINESINGLE>",
    "\"unit\"",
    "<UNITNAME_STRING>",
    "<UNITNAME_SINGLE>",
    "\"{\"",
    "\"}\"",
    "\"uuid\"",
    "\"default\"",
    "<UNITDEF_DEFAULT_TRUE_VIA_VALUE>",
    "<UNITDEF_DEFAULT_TRUE_VIA_VALUE_APOSTROPHE>",
    "\"!default\"",
    "<UNITDEF_DEFAULT_FALSE_VIA_VALUE>",
    "<UNITDEF_DEFAULT_FALSE_VIA_VALUE_APOSTROPHE>",
    "\"description\"",
    "\"label\"",
    "\"multiplier\"",
    "\"offset\"",
    "\"setting\"",
    "\"property\"",
    "\"value\"",
    "\"to\"",
    "\"system\"",
    "<UNITDEF_STRING>",
    "<UNITDEF_SINGLE>",
    "<UNITDEF_STRINGSTRING_STRING>",
    "<UNITDEF_STRINGSTRING_SINGLE>",
    "<UNITDEF_DOUBLE_DOUBLE>",
    "<UNITDEF_SYSTEMNAME_STRING>",
    "<UNITDEF_SYSTEMNAME_SINGLE>",
    "\"to\"",
    "\"unit\"",
    "<UNITDEF_SYSTEMUNIT_STRING>",
    "<UNITDEF_SYSTEMUNIT_SINGLE>",
    "\"property\"",
    "\"to\"",
    "\"value\"",
    "<ADMINTYPE_STRING>",
    "<ADMINTYPE_SINGLE>",
  };

}
