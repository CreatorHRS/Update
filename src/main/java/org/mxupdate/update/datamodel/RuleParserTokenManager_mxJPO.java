/* RuleParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. RuleParserTokenManager.java */
package org.mxupdate.update.datamodel;
import java.lang.reflect.InvocationTargetException;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import org.mxupdate.mapping.TypeDef_mxJPO;
import org.mxupdate.update.datamodel.Rule_mxJPO;
import org.mxupdate.update.datamodel.helper.AccessList_mxJPO;
import org.mxupdate.update.datamodel.helper.AccessList_mxJPO.Access;
import org.mxupdate.update.util.AbstractParser_mxJPO;
import org.mxupdate.update.util.AbstractParser_mxJPO.ParseException;
import org.mxupdate.update.util.AbstractParser_mxJPO.SimpleCharStream;
import org.mxupdate.update.util.AbstractParser_mxJPO.Token;
import org.mxupdate.update.util.AbstractParser_mxJPO.TokenMgrError;
import org.mxupdate.update.util.AdminPropertyList_mxJPO.AdminProperty;
import org.mxupdate.update.util.ParameterCache_mxJPO;

/** Token Manager. */
@SuppressWarnings("unused")class RuleParserTokenManager_mxJPO implements RuleParserConstants_mxJPO {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_5(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x80000000020000L) != 0L)
            return 388;
         if ((active0 & 0x4000L) != 0L)
            return 260;
         if ((active0 & 0x10000L) != 0L)
            return 30;
         if ((active0 & 0x20L) != 0L)
            return 223;
         return -1;
      case 1:
         if ((active0 & 0x4000L) != 0L)
            return 259;
         if ((active0 & 0x20L) != 0L)
            return 222;
         if ((active0 & 0x80000000000000L) != 0L)
            return 404;
         if ((active0 & 0x20000L) != 0L)
            return 387;
         return -1;
      case 2:
         if ((active0 & 0x20L) != 0L)
            return 221;
         if ((active0 & 0x20000L) != 0L)
            return 386;
         if ((active0 & 0x80000000000000L) != 0L)
            return 403;
         return -1;
      case 3:
         if ((active0 & 0x20L) != 0L)
            return 220;
         if ((active0 & 0x20000L) != 0L)
            return 385;
         return -1;
      case 4:
         if ((active0 & 0x20000L) != 0L)
            return 375;
         return -1;
      case 5:
         if ((active0 & 0x20000L) != 0L)
            return 376;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0){
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_5(0x280L);
      case 100:
         return jjMoveStringLiteralDfa1_5(0x20L);
      case 101:
         return jjMoveStringLiteralDfa1_5(0x100L);
      case 102:
         return jjMoveStringLiteralDfa1_5(0x800000L);
      case 104:
         return jjMoveStringLiteralDfa1_5(0x40L);
      case 108:
         return jjMoveStringLiteralDfa1_5(0x1008000L);
      case 111:
         return jjMoveStringLiteralDfa1_5(0x10000L);
      case 112:
         return jjMoveStringLiteralDfa1_5(0x80000000020000L);
      case 114:
         return jjMoveStringLiteralDfa1_5(0x4000L);
      case 116:
         return jjMoveStringLiteralDfa1_5(0x100000000000000L);
      case 117:
         return jjMoveStringLiteralDfa1_5(0x40000L);
      case 118:
         return jjMoveStringLiteralDfa1_5(0x200000000000000L);
      default :
         return jjMoveNfa_5(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_5(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_5(active0, 0x200000000000000L);
      case 101:
         return jjMoveStringLiteralDfa2_5(active0, 0x4220L);
      case 104:
         return jjMoveStringLiteralDfa2_5(active0, 0x80L);
      case 105:
         return jjMoveStringLiteralDfa2_5(active0, 0x800040L);
      case 110:
         return jjMoveStringLiteralDfa2_5(active0, 0x100L);
      case 111:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStopAtPos(1, 56);
         return jjMoveStringLiteralDfa2_5(active0, 0x1008000L);
      case 114:
         return jjMoveStringLiteralDfa2_5(active0, 0x80000000000000L);
      case 115:
         return jjMoveStringLiteralDfa2_5(active0, 0x40000L);
      case 117:
         return jjMoveStringLiteralDfa2_5(active0, 0x20000L);
      case 119:
         return jjMoveStringLiteralDfa2_5(active0, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_5(0, active0);
}
private int jjMoveStringLiteralDfa2_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa3_5(active0, 0x20000L);
      case 99:
         return jjMoveStringLiteralDfa3_5(active0, 0x1000000L);
      case 100:
         return jjMoveStringLiteralDfa3_5(active0, 0x40L);
      case 101:
         return jjMoveStringLiteralDfa3_5(active0, 0x40000L);
      case 102:
         return jjMoveStringLiteralDfa3_5(active0, 0x100L);
      case 103:
         return jjMoveStringLiteralDfa3_5(active0, 0x8000L);
      case 105:
         return jjMoveStringLiteralDfa3_5(active0, 0x80L);
      case 108:
         return jjMoveStringLiteralDfa3_5(active0, 0x200000000800000L);
      case 110:
         return jjMoveStringLiteralDfa3_5(active0, 0x10200L);
      case 111:
         return jjMoveStringLiteralDfa3_5(active0, 0x80000000000000L);
      case 115:
         return jjMoveStringLiteralDfa3_5(active0, 0x20L);
      case 118:
         return jjMoveStringLiteralDfa3_5(active0, 0x4000L);
      default :
         break;
   }
   return jjStartNfa_5(1, active0);
}
private int jjMoveStringLiteralDfa3_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_5(active0, 0x1000000L);
      case 99:
         return jjMoveStringLiteralDfa4_5(active0, 0x20L);
      case 100:
         return jjMoveStringLiteralDfa4_5(active0, 0xc0L);
      case 101:
         return jjMoveStringLiteralDfa4_5(active0, 0x10000L);
      case 102:
         return jjMoveStringLiteralDfa4_5(active0, 0x200L);
      case 105:
         return jjMoveStringLiteralDfa4_5(active0, 0x8000L);
      case 108:
         return jjMoveStringLiteralDfa4_5(active0, 0x20000L);
      case 111:
         return jjMoveStringLiteralDfa4_5(active0, 0x4100L);
      case 112:
         return jjMoveStringLiteralDfa4_5(active0, 0x80000000000000L);
      case 114:
         if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(3, 18);
         break;
      case 116:
         return jjMoveStringLiteralDfa4_5(active0, 0x800000L);
      case 117:
         return jjMoveStringLiteralDfa4_5(active0, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(2, active0);
}
private int jjMoveStringLiteralDfa4_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa5_5(active0, 0x80L);
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(4, 57);
         return jjMoveStringLiteralDfa5_5(active0, 0x80000000800040L);
      case 105:
         return jjMoveStringLiteralDfa5_5(active0, 0x20000L);
      case 107:
         return jjMoveStringLiteralDfa5_5(active0, 0x4000L);
      case 108:
         return jjMoveStringLiteralDfa5_5(active0, 0x1000000L);
      case 110:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(4, 15);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_5(active0, 0x200L);
      case 114:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(4, 16);
         return jjMoveStringLiteralDfa5_5(active0, 0x120L);
      default :
         break;
   }
   return jjStartNfa_5(3, active0);
}
private int jjMoveStringLiteralDfa5_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 99:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_5(5, 17, 376);
         return jjMoveStringLiteralDfa6_5(active0, 0x100L);
      case 101:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(5, 14);
         return jjMoveStringLiteralDfa6_5(active0, 0x80L);
      case 102:
         return jjMoveStringLiteralDfa6_5(active0, 0x1000000L);
      case 105:
         return jjMoveStringLiteralDfa6_5(active0, 0x20L);
      case 110:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(5, 6);
         break;
      case 114:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(5, 23);
         return jjMoveStringLiteralDfa6_5(active0, 0x80000000000200L);
      default :
         break;
   }
   return jjStartNfa_5(4, active0);
}
private int jjMoveStringLiteralDfa6_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa7_5(active0, 0x200L);
      case 101:
         return jjMoveStringLiteralDfa7_5(active0, 0x100L);
      case 105:
         return jjMoveStringLiteralDfa7_5(active0, 0x1000000L);
      case 110:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(6, 7);
         break;
      case 112:
         return jjMoveStringLiteralDfa7_5(active0, 0x20L);
      case 116:
         return jjMoveStringLiteralDfa7_5(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_5(5, active0);
}
private int jjMoveStringLiteralDfa7_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa8_5(active0, 0x200L);
      case 108:
         return jjMoveStringLiteralDfa8_5(active0, 0x1000000L);
      case 114:
         return jjMoveStringLiteralDfa8_5(active0, 0x100L);
      case 116:
         return jjMoveStringLiteralDfa8_5(active0, 0x20L);
      case 121:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStopAtPos(7, 55);
         break;
      default :
         break;
   }
   return jjStartNfa_5(6, active0);
}
private int jjMoveStringLiteralDfa8_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa9_5(active0, 0x100L);
      case 105:
         return jjMoveStringLiteralDfa9_5(active0, 0x20L);
      case 114:
         return jjMoveStringLiteralDfa9_5(active0, 0x200L);
      case 116:
         return jjMoveStringLiteralDfa9_5(active0, 0x1000000L);
      default :
         break;
   }
   return jjStartNfa_5(7, active0);
}
private int jjMoveStringLiteralDfa9_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa10_5(active0, 0x1000200L);
      case 111:
         return jjMoveStringLiteralDfa10_5(active0, 0x20L);
      case 115:
         return jjMoveStringLiteralDfa10_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(8, active0);
}
private int jjMoveStringLiteralDfa10_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa11_5(active0, 0x100L);
      case 110:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(10, 5);
         break;
      case 114:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(10, 24);
         break;
      case 115:
         return jjMoveStringLiteralDfa11_5(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_5(9, active0);
}
private int jjMoveStringLiteralDfa11_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa12_5(active0, 0x200L);
      case 114:
         return jjMoveStringLiteralDfa12_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(10, active0);
}
private int jjMoveStringLiteralDfa12_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa13_5(active0, 0x200L);
      case 118:
         return jjMoveStringLiteralDfa13_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(11, active0);
}
private int jjMoveStringLiteralDfa13_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa14_5(active0, 0x100L);
      case 118:
         return jjMoveStringLiteralDfa14_5(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_5(12, active0);
}
private int jjMoveStringLiteralDfa14_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa15_5(active0, 0x100L);
      case 101:
         return jjMoveStringLiteralDfa15_5(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_5(13, active0);
}
private int jjMoveStringLiteralDfa15_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa16_5(active0, 0x200L);
      case 99:
         return jjMoveStringLiteralDfa16_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(14, active0);
}
private int jjMoveStringLiteralDfa16_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa17_5(active0, 0x300L);
      default :
         break;
   }
   return jjStartNfa_5(15, active0);
}
private int jjMoveStringLiteralDfa17_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa18_5(active0, 0x200L);
      case 101:
         return jjMoveStringLiteralDfa18_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(16, active0);
}
private int jjMoveStringLiteralDfa18_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa19_5(active0, 0x200L);
      case 115:
         return jjMoveStringLiteralDfa19_5(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_5(17, active0);
}
private int jjMoveStringLiteralDfa19_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(19, 8);
         return jjMoveStringLiteralDfa20_5(active0, 0x200L);
      default :
         break;
   }
   return jjStartNfa_5(18, active0);
}
private int jjMoveStringLiteralDfa20_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(20, 9);
         break;
      default :
         break;
   }
   return jjStartNfa_5(19, active0);
}
private int jjStartNfaWithStates_5(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_5(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 447;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 4:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(0, 1); }
                  break;
               case 21:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(2, 3); }
                  break;
               case 33:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(4, 5); }
                  break;
               case 54:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(6, 7); }
                  break;
               case 69:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(8, 9); }
                  break;
               case 89:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(10, 11); }
                  break;
               case 99:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(12, 13); }
                  break;
               case 114:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(14, 15); }
                  break;
               case 122:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(16, 17); }
                  break;
               case 132:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(18, 19); }
                  break;
               case 143:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(20, 21); }
                  break;
               case 155:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(22, 23); }
                  break;
               case 173:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(24, 25); }
                  break;
               case 186:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(26, 27); }
                  break;
               case 203:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(28, 29); }
                  break;
               case 225:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(30, 31); }
                  break;
               case 243:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(32, 33); }
                  break;
               case 262:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(34, 35); }
                  break;
               case 277:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(36, 37); }
                  break;
               case 289:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(38, 39); }
                  break;
               case 303:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(40, 41); }
                  break;
               case 319:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(42, 43); }
                  break;
               case 338:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(44, 45); }
                  break;
               case 347:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(46, 47); }
                  break;
               case 357:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(48, 49); }
                  break;
               case 376:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(50, 51); }
                  break;
               case 390:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(52, 53); }
                  break;
               case 407:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(54, 55); }
                  break;
               case 422:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(56, 57); }
                  break;
               case 433:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(58, 59); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 112)
                     { jjAddStates(60, 64); }
                  else if (curChar == 110)
                     { jjAddStates(65, 67); }
                  else if (curChar == 99)
                     { jjAddStates(68, 71); }
                  else if (curChar == 114)
                     { jjAddStates(72, 73); }
                  else if (curChar == 100)
                     { jjAddStates(74, 75); }
                  else if (curChar == 115)
                     { jjAddStates(76, 78); }
                  else if (curChar == 97)
                     { jjAddStates(79, 86); }
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 222:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 238;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 220:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 236;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 404:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 418;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 223:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 239;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 221:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 237;
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 388:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 445;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 421;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 419;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 387;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 260:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 273;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 272;
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 3:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if (curChar == 101 && kind > 40)
                     kind = 40;
                  break;
               case 6:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 13:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 121 && kind > 49)
                     kind = 49;
                  break;
               case 23:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 31:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 34:
                  if (curChar == 121 && kind > 50)
                     kind = 50;
                  break;
               case 35:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 43:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 97)
                     { jjAddStates(79, 86); }
                  break;
               case 53:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 55:
                  if (curChar == 110 && kind > 25)
                     kind = 25;
                  break;
               case 56:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 68:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 70:
                  if (curChar == 110 && kind > 27)
                     kind = 27;
                  break;
               case 71:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 83:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 90:
                  if (curChar == 116 && kind > 30)
                     kind = 30;
                  break;
               case 91:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 98:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if (curChar == 116 && kind > 32)
                     kind = 32;
                  break;
               case 101:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 108:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 115:
                  if (curChar == 114 && kind > 35)
                     kind = 35;
                  break;
               case 116:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 121:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 123:
                  if (curChar == 101 && kind > 37)
                     kind = 37;
                  break;
               case 124:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 131:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 133:
                  if (curChar == 121 && kind > 41)
                     kind = 41;
                  break;
               case 134:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 142:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 144:
                  if (curChar == 121 && kind > 48)
                     kind = 48;
                  break;
               case 145:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 153:
                  if (curChar == 115)
                     { jjAddStates(76, 78); }
                  break;
               case 154:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 156:
                  if (curChar == 110 && kind > 26)
                     kind = 26;
                  break;
               case 157:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 169:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 174:
                  if (curChar == 116 && kind > 31)
                     kind = 31;
                  break;
               case 175:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 182:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 187:
                  if (curChar == 121 && kind > 52)
                     kind = 52;
                  break;
               case 188:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 196:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 100)
                     { jjAddStates(74, 75); }
                  break;
               case 202:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 204:
                  if (curChar == 110 && kind > 28)
                     kind = 28;
                  break;
               case 205:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 217:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 224:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 226:
                  if (curChar == 116 && kind > 33)
                     kind = 33;
                  break;
               case 227:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 234:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 114)
                     { jjAddStates(72, 73); }
                  break;
               case 242:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 244:
                  if (curChar == 110 && kind > 29)
                     kind = 29;
                  break;
               case 245:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 257:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 261:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 263:
                  if (curChar == 116 && kind > 34)
                     kind = 34;
                  break;
               case 264:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 271:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 99)
                     { jjAddStates(68, 71); }
                  break;
               case 276:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 278:
                  if (curChar == 114 && kind > 36)
                     kind = 36;
                  break;
               case 279:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 284:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 290:
                  if (curChar == 101 && kind > 38)
                     kind = 38;
                  break;
               case 291:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 298:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 304:
                  if (curChar == 121 && kind > 53)
                     kind = 53;
                  break;
               case 305:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 313:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if (curChar == 121 && kind > 54)
                     kind = 54;
                  break;
               case 321:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 329:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 110)
                     { jjAddStates(65, 67); }
                  break;
               case 337:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 339:
                  if (curChar == 101 && kind > 39)
                     kind = 39;
                  break;
               case 340:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 348:
                  if (curChar == 121 && kind > 42)
                     kind = 42;
                  break;
               case 349:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 358:
                  if (curChar == 121 && kind > 46)
                     kind = 46;
                  break;
               case 359:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 367:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 112)
                     { jjAddStates(60, 64); }
                  break;
               case 375:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 377:
                  if (curChar == 121 && kind > 43)
                     kind = 43;
                  break;
               case 378:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 386:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 389:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 391:
                  if (curChar == 121 && kind > 44)
                     kind = 44;
                  break;
               case 392:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 400:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 405:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 408:
                  if (curChar == 121 && kind > 45)
                     kind = 45;
                  break;
               case 409:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 417:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 423:
                  if (curChar == 121 && kind > 47)
                     kind = 47;
                  break;
               case 424:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 432:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 434:
                  if (curChar == 121 && kind > 51)
                     kind = 51;
                  break;
               case 435:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 443:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 447 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 59)
                        kind = 59;
                     { jjCheckNAdd(11); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 58)
                     kind = 58;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 6:
                  if (curChar == 92)
                     { jjAddStates(92, 95); }
                  break;
               case 8:
                  if (curChar == 92)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 9:
                  if (curChar == 123)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 10:
                  if (curChar == 125)
                     { jjCheckNAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 107:
         return jjMoveStringLiteralDfa1_2(0x80000L);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa2_2(active0, 0x80000L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 121:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(2, 19);
         break;
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 8;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 4:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(96, 97); }
                  break;
               case 6:
                  if ((0x100000600L & l) != 0L)
                     { jjAddStates(98, 99); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 123)
                     { jjAddStates(96, 97); }
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 5:
               case 6:
                  if ((0x7fffffe00000000L & l) != 0L)
                     { jjCheckNAddTwoStates(6, 7); }
                  break;
               case 7:
                  if (curChar == 125 && kind > 20)
                     kind = 20;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 8 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 13;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                     { jjCheckNAdd(12); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 4:
                  if ((0xfffffffb00000400L & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 12)
                     kind = 12;
                  break;
               case 12:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  { jjCheckNAdd(12); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 12:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  { jjCheckNAdd(12); }
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 6:
                  if (curChar == 92)
                     { jjAddStates(100, 104); }
                  break;
               case 8:
                  if (curChar == 92)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 9:
                  if (curChar == 123)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 10:
                  if (curChar == 125)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 11:
                  if (curChar == 110)
                     { jjCheckNAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 12:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  { jjCheckNAdd(12); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 13 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0){
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                     { jjCheckNAdd(11); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 10)
                     kind = 10;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  { jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 6:
                  if (curChar == 92)
                     { jjAddStates(92, 95); }
                  break;
               case 8:
                  if (curChar == 92)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 9:
                  if (curChar == 123)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 10:
                  if (curChar == 125)
                     { jjCheckNAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffa00000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     { jjCheckNAdd(11); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  if (curChar == 35)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 10)
                     kind = 4;
                  break;
               case 3:
               case 7:
                  if (curChar == 34)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 4:
                  if ((0xfffffffb00000000L & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 5:
                  if (curChar == 34 && kind > 21)
                     kind = 21;
                  break;
               case 11:
                  if ((0xfffffffa00000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((0xd7ffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 6:
                  if (curChar == 92)
                     { jjAddStates(92, 95); }
                  break;
               case 8:
                  if (curChar == 92)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 9:
                  if (curChar == 123)
                     { jjCheckNAddStates(89, 91); }
                  break;
               case 10:
                  if (curChar == 125)
                     { jjCheckNAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 11:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  { jjCheckNAdd(11); }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(87, 88); }
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(89, 91); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   4, 11, 21, 29, 33, 41, 54, 66, 69, 81, 89, 96, 99, 106, 114, 119, 
   122, 129, 132, 140, 143, 151, 155, 167, 173, 180, 186, 194, 203, 215, 225, 232, 
   243, 255, 262, 269, 277, 282, 289, 296, 303, 311, 319, 327, 338, 345, 347, 355, 
   357, 365, 376, 384, 390, 398, 407, 415, 422, 430, 433, 441, 388, 405, 420, 431, 
   446, 337, 346, 373, 287, 301, 317, 335, 260, 274, 223, 240, 171, 184, 200, 67, 
   87, 97, 112, 120, 130, 141, 152, 1, 2, 4, 5, 6, 7, 8, 9, 10, 
   4, 5, 6, 7, 7, 8, 9, 10, 11, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\144\145\163\143\162\151\160\164\151\157\156", 
"\150\151\144\144\145\156", "\41\150\151\144\144\145\156", 
"\145\156\146\157\162\143\145\162\145\163\145\162\166\145\141\143\143\145\163\163", 
"\41\145\156\146\157\162\143\145\162\145\163\145\162\166\145\141\143\143\145\163\163", null, null, null, null, "\162\145\166\157\153\145", "\154\157\147\151\156", 
"\157\167\156\145\162", "\160\165\142\154\151\143", "\165\163\145\162", "\153\145\171", null, null, 
null, "\146\151\154\164\145\162", "\154\157\143\141\154\146\151\154\164\145\162", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\160\162\157\160\145\162\164\171", "\164\157", "\166\141\154\165\145", 
null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 5;
int defaultLexState = 5;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public RuleParserTokenManager_mxJPO(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public RuleParserTokenManager_mxJPO (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 447; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( SimpleCharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 6 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "ADMINREF_EXPECTED",
   "ACCESS_STRING_EXPECTED",
   "ACCESS_EXPECTED",
   "MULTILINESTRING_EXPECTED",
   "STRING_EXPECTED",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, 5, 5, 5, 5, -1, -1, 2, 2, 1, 1, 5, 2, 2, 4, 4, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 4, 0, 4, 4, 4, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[447];
    private final int[] jjstateSet = new int[2 * 447];

    
    protected int curChar;
}
